{
    "questions": [
        {
            "hints": [
                " #44. 1.1 Try a hash table.",
                " #732. 16.4 If you were designing this for an NxN board, how might your solution change?"
            ],
            "id": "1.1",
            "question": " Is Unique: Implement an algorithm to determine if a string has all unique characters. What if you cannot use additional data structures?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #7. 2.5 Of course, you could convert the linked lists to integers, compute the sum, and then convert it back to a new linked list. If you did this in an interview, your interviewer would likely accept the answer, and then see if you could do this without converting it to a number and back.",
                " #84. 1.2 There is one solution that is 0( N log N) time. Another solution uses some space, but isO(N) time.",
                " #722. 16.11 Consider memoization to optimize the runtime. Think carefully about what exactly you cache. What is the runtime? The runtime is closely related to the max size of the table.",
                " #737. 16.1 You could also try using XOR."
            ],
            "id": "1.2",
            "question": " Check Permutation: Given two strings, write a method to decide if one is a permutation of the other. _pg 193",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #53. 1.3 It's often easiest to modify strings by going from the end of the string to the beginning.",
                " #118. 1.3 You might find you need to know the number of spaces. Can you just count them?"
            ],
            "id": "1.3",
            "question": " URLify: Write a method to replace all spaces in a string with '%20'. You may assume that the string has sufficient space at the end to hold the additional characters, and that you are given the \"true\" length of the string. (Note: If implementing in Java, please use a character array so that you can perform this operation in place.) EXAMPLE \", 13 Input: \"Mr John Smith Output: \"Mr%20John%20Smith\"",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #106. 1.4 You do not have to-and should not-generate all permutations. This would be very inefficient.",
                " #121. 1.4 What characteristics would a string that is a permutation of a palindrome have?",
                " #134. 1.4 Have you tried a hash table? You should be able to get this down to 0( N) time.",
                " #136. 1.4 Can you reduce the space usage by using a bit vector?"
            ],
            "id": "1.4",
            "question": " Palindrome Permutation: Given a string, write a function to check if it is a permutation of a palin\u00ad drome. A palindrome is a word or phrase that is the same forwards and backwards. A permutation is a rearrangement of letters. The palindrome does not need to be limited to just dictionary words. EXAMPLE Input: Tact Coa Output: True (permutations: \"taco cat\", \"atco eta\", etc.)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #23. 1.5 Start with the easy thing. Can you check each of the conditions separately?",
                " #97. 1.5 What is the relationship between the \"insert character\" option and the \"remove char\u00ad acter\" option? Do these need to be two separate checks?",
                " #130. 1.5 Can you do all three checks in a single pass?"
            ],
            "id": "1.5",
            "question": " One Away: There are three types of edits that can be performed on strings: insert a character, remove a character, or replace a character. Given two strings, write a function to check if they are one edit (or zero edits) away. EXAMPLE -> pales, pale -> pale, bale -> pale, bake -> pale, ple true true true false",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #92. 1.6 Do the easy thing first. Compress the string, then compare the lengths.",
                " #110. 1.6 Be careful that you aren't repeatedly concatenating strings together. This can be very inefficient."
            ],
            "id": "1.6",
            "question": " String Compression: Implement a method to perform basic string compression using the counts of repeated characters. For example, the string aabcccccaaa would become a2blc5a3. If the \"compressed\" string would not become smaller than the original string, your method should return the original string. You can assume the string has only uppercase and lowercase letters (a - z).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #51. 1.7 Try thinking about it layer by layer. Can you rotate a specific layer?",
                " #100. 1.7 Rotating a specific layer would just mean swapping the values in four arrays. If you were asked to swap the values in two arrays, could you do this? Can you then extend it to four arrays?"
            ],
            "id": "1.7",
            "question": " Rotate Matrix: Given an image represented by an NxN matrix, where each pixel in the image is 4 bytes, write a method to rotate the image by 90 degrees. Can you do this in place?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #17. 1.8 If you just cleared the rows and columns as you found Os, you'd likely wind up clearing the whole matrix. Try finding the cells with zeros first before making any changes to the matrix.",
                " #74. 1.8 Can you use O(N) additional space instead of O(N 2 )? What information do you really need from the list of cells that are zero?",
                " #702. 17.19 Part 2: Try a sum of squares of the values."
            ],
            "id": "1.8",
            "question": " Zero Matrix: Write an algorithm such that if an element in an MxN matrix is 0, its entire row and column are set to 0.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #34. 1.9 If a string is a rotation of another, then it's a rotation at a particular point. For example, a rotation of waterbottle at character 3 means cutting waterbottle at character 3 and putting the right half (erbottle) before the left half (wat).",
                " #88. 1.9 We are essentially asking if there's a way of splitting the first string into two parts, x and y, such that the first string is xy and the second string is yx. For example, x = wat and y = erbottle. The first string is xy = waterbottle. The second string is yx = erbottlewat.",
                " #704. 17.7 Each connected subgraph represents a group of synonyms. To find each group, we can do repeated breadth-first (or depth-first) searches."
            ],
            "id": "1.9",
            "question": " String Rotation:Assumeyou have a method isSubstringwhich checks if one word is a substring of another. Given two strings, sl and s2, write code to check if s2 is a rotation of sl using only one call to isSubstring (e.g., \"waterbottle\" is a rotation of\"erbottlewat\").",
            "solution": "<pre>package Q1_09_String_Rotation;\n\npublic class Question {\n\tpublic static boolean isSubstring(String big, String small) {\n\t\tif (big.indexOf(small) >= 0) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tpublic static boolean isRotation(String s1, String s2) {\n\t    int len = s1.length();\n\t    /* check that s1 and s2 are equal length and not empty */\n\t    if (len == s2.length() && len > 0) { \n\t    \t/* concatenate s1 and s1 within new buffer */\n\t    \tString s1s1 = s1 + s1;\n\t    \treturn isSubstring(s1s1, s2);\n\t    }\n\t    return false;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tString[][] pairs = {{\"apple\", \"pleap\"}, {\"waterbottle\", \"erbottlewat\"}, {\"camera\", \"macera\"}};\n\t\tfor (String[] pair : pairs) {\n\t\t\tString word1 = pair[0];\n\t\t\tString word2 = pair[1];\n\t\t\tboolean is_rotation = isRotation(word1, word2);\n\t\t\tSystem.out.println(word1 + \", \" + word2 + \": \" + is_rotation);\n\t\t}\n\t}\n\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/1_9.png\" />"
        },
        {
            "hints": [
                " #9. 2.1 Have you tried a hash table? You should be able to do this in a single pass of the linked list.",
                " #40. 2.1 Without extra space, you'll need O(N 2 ) time. Try using two pointers, where the second one searches ahead of the first one."
            ],
            "id": "2.1",
            "question": " R\ufffdmov\ufffd Dups! Write code to remove duplicates from an unsorted linked list. FOLLOW UP How would you solve this problem if a temporary buffer is not allowed? ................................................... pg208",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #8. 2.2 What if you knew the linked list size? What is the difference between finding the Kth-to\u00ad last element and finding the Xth element?",
                " #25. 2.2 If you don't know the linked list size, can you compute it? How does this impact the runtime?",
                " #41. 2.2 Try implementing it recursively. If you could find the (K-l)th to last element, can you find the Kth element?",
                " #67. 2.2 You might find it useful to return multiple values. Some languages don't directly support this, but there are workarounds in essentially any language. What are some of those workarounds?",
                " #126. 2.2 Can you do it iteratively? Imagine if you had two pointers pointing to adjacent nodes and they were moving at the same speed through the linked list. When one hits the end of the linked list, where will the other be?"
            ],
            "id": "2.2",
            "question": " Return Kth to Last: Implement an algorithm to find the kth to last element of a singly linked list.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #72. 2.3 Picture the list 1->5->9->12. Removing 9 would make it look like 1->5->12. You only have access to the 9 node. Can you make it look like the correct answer?"
            ],
            "id": "2.3",
            "question": " Delete Middle Node: Implement an algorithm to delete a node in the middle (i.e., any node but the first and last node, not necessarily the exact middle) of a singly linked list, given only access to that node. EXAMPLE lnput:the node c from the linked lista->b->c->d->e->f Result: nothing is returned, but the new linked list looks like a->b->d->e- >f",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #3. 2.4 There are many solutions to this problem, most of which are equally optimal in runtime. Some have shorter, cleaner code than others. Can you brainstorm different solutions?",
                " #24. 2.4 Consider that the elements don't have to stay in the same relative order. We only need to ensure that elements less than the pivot must be before elements greater than the pivot. Does that help you come up with more solutions?"
            ],
            "id": "2.4",
            "question": " Partition: Write code to partition a linked list around a value x, such that all nodes less than x come before all nodes greater than or equal to x. If x is contained within the list, the values of x only need to be after the elements less than x (see below). The partition element x can appear anywhere in the \"right partition\"; it does not need to appear between the left and right partitions. EXAMPLE Input: 3 -> 5 -> 8 -> 5 -> 10 -> 2 -> 1 [partition= 5] Output: 3 -> 1 -> 2 -> 10 -> 5 -> 5 -> 8",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #7. 2.5 Of course, you could convert the linked lists to integers, compute the sum, and then convert it back to a new linked list. If you did this in an interview, your interviewer would likely accept the answer, and then see if you could do this without converting it to a number and back.",
                " #30. 2.5 Try recursion. Suppose you have two lists, A = 1->5->9 (representing 951) and B 2-> 3->6-> 7 (representing 7632), and a function that operates on the remainder of the lists (5->9 and 3->6->7). Could you use this to create the sum method? What is the relationship between sum(l->5->9, 2->3->6->7) and sum(5->9, 3->6->7)?",
                " #71. 2.5 Make sure you have considered linked lists that are not the same length.",
                " #95. 2.5 Does your algorithm work on linked lists like 9->7->8 and 6->8->5? Double check that.",
                " #109. 2.5 For the follow-up question: The issue is that when the linked lists aren't the same length, the head of one linked list might represent the 1 OOO's place while the other represents the 1 O's place. What if you made them the same length? Is there a way to modify the linked list to do that, without changing the value it represents?"
            ],
            "id": "2.5",
            "question": " a linked list, where each node contains a single digit. The digits are stored in reverse order, such that the 1 's digit is at the head of the list. Write a function that adds the two numbers and returns the sum as a linked list. Sum Lists: You have two numbers represented by EXAMPLE Input: (7-> 1 -> 6) + (5 -> 9 -> 2).That is,617 + 295. Output: 2 -> 1 -> 9. That is, 912. FOLLOW UP Suppose the digits are stored in forward order. Repeat the above problem. EXAMPLE lnput:(6 -> 1 -> 7) + (2 -> 9 -> 5).That is,617 + 295. Output: 9 -> 1 -> 2. That is, 912.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #5. 2.6 A palindrome is something which is the same when written forwards and backwards. What if you reversed the linked list?",
                " #13. 2.6 Try using a stack.",
                " #29. 2.6 Assume you have the length of the linked list. Can you implement this recursively?",
                " #61. 2.6 In the recursive approach (we have the length of the list), the middle is the base case: is Permutation (middle) is true. The node x to the immediate left of the middle: What can that node do to check if x->middle->y forms a palindrome? Now suppose that checks out. What about the previous node a? If x->middle->y is a palindrome, how can it check that a->x->middle->y->b is a palindrome?",
                " #101. 2.6 Go back to the previous hint. Remember: There are ways to return multiple values. You can do this with a new class."
            ],
            "id": "2.6",
            "question": " Palindrome: Implement a function to check if a linked list is a palindrome.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #20. 2.7 You can do this in O(A+B) time and 0(1) additional space. That is, you do not need a hash table (although you could do it with one).",
                " #45. 2.7 Examples will help you. Draw a picture of intersecting linked lists and two equivalent linked lists (by value) that do not intersect.",
                " #55. 2.7 Focus first on just identifying if there's an intersection.",
                " #65. 2.7 Observe that two intersecting linked lists will always have the same last node. Once they intersect, all the nodes after that will be equal.",
                " #76. 2.7 You can determine if two linked lists intersect by traversing to the end of each and comparing their tails.",
                " #93. 2.7 Now, you need to find where the linked lists intersect. Suppose the linked lists were the same length. How could you do this?",
                " #111. 2.7 If the two linked lists were the same length, you could traverse forward in each until you found an element in common. Now, how do you adjust this for lists of different lengths?",
                " #120. 2.7 Try using the difference between the lengths of the two linked lists.",
                " #129. 2.7 If you move a pointer in the longer linked list forward by the difference in lengths, you can then apply a similar approach to the scenario when the linked lists are equal."
            ],
            "id": "2.7",
            "question": " Intersection: Given two (singly) linked lists, determine if the two lists intersect. Return the inter\u00ad secting node. Note that the intersection is defined based on reference, not value. That is, if the kth node of the first linked list is the exact same node (by reference) as the jth node of the second linked list, then they are intersecting.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #50. 2.8 There are really two parts to this problem. First, detect if the linked list has a loop. Second, figure out where the loop starts.",
                " #69. 2.8 To identify if there's a cycle, try the \"runner\" approach described on page 93. Have one pointer move faster than the other.",
                " #83. 2.8 You can use two pointers, one moving twice as fast as the other. If there is a cycle, the two pointers will collide. They will land at the same location at the same time. Where do they land? Why there?",
                " #90. 2.8 If you haven't identified the pattern of where the two pointers start, try this: Use the linked list 1->2->3->4->5->6->7->8->9->?, where the ? links to another node. Try making the ? the first node (that is, the 9 points to the 1 such that the entire linked list is a loop). Then make the ? the node 2. Then the node 3. Then the node 4. What is the pattern? Can you explain why this happens?"
            ],
            "id": "2.8",
            "question": " Loop Detection: Given a circular linked list, implement an algorithm that returns the node at the beginning of the loop. DEFINITION Circular linked list: A (corrupt) linked list in which a node's next pointer points to an earlier node, so as to make a loop in the linked list. EXAMPLE Input: Output: A -> B -> C -> D -> E -> C [the same C as earlier] C",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #2. 3.1 A stack is simply a data structure in which the most recently added elements are removed first. Can you simulate a single stack using an array? Remember that there are many possible solutions, and there are tradeoffs of each.",
                " #72. 2.3 Picture the list 1->5->9->12. Removing 9 would make it look like 1->5->12. You only have access to the 9 node. Can you make it look like the correct answer?",
                " #38. 3.1 If you want to allow for flexible divisions, you can shift stacks around. Can you ensure that all available capacity is used?",
                " #58. 3.1 Try thinking about the array as circular, such that the end of the array \"wraps around\"to the start of the array."
            ],
            "id": "3.1",
            "question": " Three in One: Describe how you could use a single array to implement three stacks.",
            "solution": "<pre>package Q3_01_Three_in_One;\n\nimport java.util.EmptyStackException;\n\nimport CtCILibrary.AssortedMethods;\n\npublic class FixedMultiStack {\n\tprivate int numberOfStacks = 3;\n\tprivate int stackCapacity;\n\tprivate int[] values;\n\tprivate int[] sizes;\n\t\n\tpublic FixedMultiStack(int stackSize) {\n\t\tstackCapacity = stackSize;\n\t\tvalues = new int[stackSize * numberOfStacks];\n\t\tsizes = new int[numberOfStacks];\n\t}\n\n\t/* Push value onto stack. */\n\tpublic void push(int stackNum, int value) throws FullStackException {\n\t\t/* Check that we have space for the next element */\n\t\tif (isFull(stackNum)) { \n\t\t\tthrow new FullStackException();\n\t\t}\n\t\t\n\t\t/* Increment stack pointer and then update top value. */\t\t\n\t\tsizes[stackNum]++;\n\t\tvalues[indexOfTop(stackNum)] = value;\t\n\t}\n\n\t/* Pop item from top stack. */\n\tpublic int pop(int stackNum) {\n\t\tif (isEmpty(stackNum)) {\n\t\t\tthrow new EmptyStackException();\n\t\t}\n\t\t\n\t\tint topIndex = indexOfTop(stackNum);\n\t\tint value = values[topIndex]; // Get top\n\t\tvalues[topIndex] = 0; // Clear \n\t\tsizes[stackNum]--; // Shrink\n\t\treturn value;\n\t}\n\n\t/* Return top element. */\n\tpublic int peek(int stackNum) {\n\t\tif (isEmpty(stackNum)) {\n\t\t\tthrow new EmptyStackException();\n\t\t}\t\t\n\t\treturn values[indexOfTop(stackNum)];\n\t}\n\n\t/* Return if stack is empty. */\n\tpublic boolean isEmpty(int stackNum) {\n\t\treturn sizes[stackNum] == 0;\n\t}\n\t\n\t/* Return if stack is full. */\n\tpublic boolean isFull(int stackNum) {\n\t\treturn sizes[stackNum] == stackCapacity;\n\t}\n\t\n\t/* Returns index of the top of the stack. */\n\tprivate int indexOfTop(int stackNum) {\n\t\tint offset = stackNum * stackCapacity;\n\t\tint size = sizes[stackNum];\n\t\treturn offset + size - 1;\n\t}\t\n\t\n\tpublic int[] getValues() {\n\t\treturn values;\n\t}\n\t\n\tpublic int[] getStackValues(int stackNum) {\n\t\tint[] items = new int[sizes[stackNum]];\n\t\tfor (int i = 0; i < items.length; i++) {\n\t\t\titems[i] = values[stackNum * stackCapacity + i];\n\t\t}\n\t\treturn items;\n\t}\n\t\n\tpublic String stackToString(int stackNum) {\n\t\tint[] items = getStackValues(stackNum);\n\t\treturn stackNum + \": \" + AssortedMethods.arrayToString(items);\n\t}\t\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/3_1a.png\" /><br /><img src=\"/assets/images/solutions/3_1b.png\" /><br /><img src=\"/assets/images/solutions/3_1c.png\" /><br />"
        },
        {
            "hints": [
                " #27. 3.2 Observe that the minimum element doesn't change very often. It only changes when a smaller element is added, or when the smallest element is popped.",
                " #59. 3.2 What if we kept track of extra data at each stack node? What sort of data might make it easier to solve the problem?",
                " #78. 3.2 Consider having each node know the minimum of its \"substack\" (all the elements beneath it, including itself)."
            ],
            "id": "3.2",
            "question": " Stack Min: How would you design a stack which, in addition to push and pop, has a function min which returns the minimum element? Push, pop and min should all operate in 0(1) time.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #64. 3.3 You will need to keep track of the size of each substack. When one stack is full, you may need to create a new stack.",
                " #87. 4.12 What work is duplicated in the current brute-force algorithm?"
            ],
            "id": "3.3",
            "question": " Stack of Plates: Imagine a (literal) stack of plates. If the stack gets too high, it might topple. Therefore, in real life, we would likely start a new stack when the previous stack exceeds some threshold. Implement a data structure SetOfStacks that mimics this. SetO-fStacks should be composed of several stacks and should create a new stack once the previous one exceeds capacity. SetOfStacks. push() and SetOfStacks. pop() should behave identically to a single stack (that is, pop () should return the same values as it would if there were just a single stack). FOLLOW UP Implement a function popAt ( int index) which performs a pop operation on a specific sub-stack. pg233",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #98. 3.4 The major difference between a queue and a stack is the order of elements. A queue removes the oldest item and a stack removes the newest item. How could you remove the oldest item from a stack if you only had access to the newest item?"
            ],
            "id": "3.4",
            "question": " Queue via Stacks:",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #15. 3.5 One way of sorting an array is to iterate through the array and insert each element into a new array in sorted order. Can you do this with a stack?",
                " #32. 3.5 Imagine your secondary stack is sorted. Can you insert elements into it in sorted order? You might need some extra storage. What could you use for extra storage?",
                " #43. 3.5 Keep the secondary stack in sorted order, with the biggest elements on the top. Use the primary stack for additional storage."
            ],
            "id": "3.5",
            "question": " Implement a MyQueue class which implements a queue using two stacks. Sort Stack: Write a program to sort a stack such that the smallest items are on the top. You can use an additional temporary stack, but you may not copy the elements into any other data structure (such as an array). The stack supports the following operations: push, pop, peek, and is Empty.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #22. 3.6 We could consider keeping a single linked list for dogs and cats, and then iterating through it to find the first dog (or cat). What is the impact of doing this?",
                " #56. 3.6 Let's suppose we kept separate lists for dogs and cats. How would we find the oldest animal of any type? Be creative!",
                " #63. 3.6 Think about how you'd do it in real life. You have a list of dogs in chronological order and a list of cats in chronological order. What data would you need to find the oldest animal? How would you maintain this data?"
            ],
            "id": "3.6",
            "question": " Animal Shelter: An animal shelter, which holds only dogs and cats, operates on a strictly\"first in, first out\" basis. People must adopt either the \"oldest\" (based on arrival time) of all animals at the shelter, or they can select whether they would prefer a dog or a cat (and will receive the oldest animal of that type). They cannot select which specific animal they would like. Create the data structures to maintain this system and implement operations such as enqueue, dequeueAny, dequeueDog, and dequeueCat. You may use the built-in Linked list data structure.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #127. 4.1 Two well-known algorithms can do this. What are the tradeoffs between them?"
            ],
            "id": "4.1",
            "question": " Route Between Nodes: Given a directed graph, design an algorithm to find out whether there is a route between two nodes.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #79. 4.6 Think about how an in-order traversal works and try to \"reverse engineer\" it.",
                " #73. 4.2 You could implement this by finding the \"ideal\" next element to add and repeatedly calling insertValue. This will be a bit inefficient, as you would have to repeatedly traverse the tree. Try recursion instead. Can you divide this problem into subproblems?"
            ],
            "id": "4.2",
            "question": " Minimal Tree: Given a sorted (increasing order) array with unique integer elements, write an algo\u00ad rithm to create a binary search tree with minimal height.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #107. 4.3 Try modifying a graph search algorithm to track the depth fro the root.",
                " #123. 4.3 A hash table or array that maps from level number to nodes at that level might also be useful.",
                " #135. 4.3 You should be able to come up with an algorithm involving both depth-first search and breadth-first search."
            ],
            "id": "4.3",
            "question": " List of Depths: Given a binary tree, design an algorithm which creates a linked list of all the nodes at each depth (e.g., if you have a tree with depth D, you'll have D linked lists).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #27. 3.2 Observe that the minimum element doesn't change very often. It only changes when a smaller element is added, or when the smallest element is popped.",
                " #33. 4.4 If you've developed a brute force solution, be careful about its runtime. If you are computing the height of the subtrees for each node, you could have a pretty inefficient algorithm.",
                " #49. 4.4 What if you could modify the binary tree node class to allow a node to store the height of its subtree?"               
            ],
            "id": "4.4",
            "question": " Check Balanced: Implement a function to check if a binary tree is balanced. For the purposes of this question, a balanced tree is defined to be a tree such that the heights of the two subtrees of any node never differ by more than one.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #35. 4.5 If you traversed the tree using an in-order traversal and the elements were truly in the right order, does this indicate that the tree is actually in order? What happens for duplicate elements? If duplicate elements are allowed, they must be on a specific side (usually the left).",
                " #57. 4.5 To be a binary search tree, it's not sufficient that the left. value <= current. value < right. value for each node. Every node on the left must be less than the current node, which must be less than all the nodes on the right.",
                " #86. 4.5 If every node on the left must be less than or equal to the current node, then this is really the same thing as saying that the biggest node on the left must be less than or equal to the current node.",
                " #113. 4.5 Rather than validating the current node's value against left T ree. max and rightTree. min, can we flip around the logic? Validate the left tree's nodes to ensure that they are smaller than current. value.",
                " #128. 4.5 Think about the checkBST function as a recursive function that ensures each node is within an allowable (min, max) range. At first, this range is infinite. When we traverse to the left, the min is negative infinity and the max is root. value. Can you implement this recursive function and properly adjust these ranges as you traverse the tree?"
            ],
            "id": "4.5",
            "question": " Validate BST: Implement a function to check if a binary tree is a binary search tree.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #79. 4.6 Think about how an in-order traversal works and try to \"reverse engineer\" it.",
                " #91. 4.6 Here's one step of the logic: The successor of a specific node is the leftmost node of the right subtree. What if there is no right subtree, though?"
            ],
            "id": "4.6",
            "question": " Successor: Write an algorithm to find the \"next\" node (i.e., in-order successor) of a given node in a binary search tree. You may assume that each node has a link to its parent.",
            "solution": "<pre>package Q4_06_Successor;\n\nimport CtCILibrary.TreeNode;\n\npublic class Question {\n\n\tpublic static TreeNode inorderSucc(TreeNode n) { \n\t\tif (n == null) return null;\n\t\t\n\t\t// Found right children -> return left most node of right subtree\n\t\tif (n.parent == null || n.right != null) { \n\t\t\treturn leftMostChild(n.right); \n\t\t} else { \n\t\t\tTreeNode q = n;\n\t\t\tTreeNode x = q.parent;\n\t\t\t// Go up until we�re on left instead of right\n\t\t\twhile (x != null && x.left != q) {\n\t\t\t\tq = x;\n\t\t\t\tx = x.parent;\n\t\t\t}\n\t\t\treturn x;\n\t\t}  \n\t} \n\t\t\n\tpublic static TreeNode leftMostChild(TreeNode n) {\n\t\tif (n == null) {\n\t\t\treturn null;\n\t\t}\n\t\twhile (n.left != null) {\n\t\t\tn = n.left; \n\t\t}\n\t\treturn n; \n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[] array = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\t\tTreeNode root = TreeNode.createMinimalBST(array);\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tTreeNode node = root.find(array[i]);\n\t\t\tTreeNode next = inorderSucc(node);\n\t\t\tif (next != null) {\n\t\t\t\tSystem.out.println(node.data + \"->\" + next.data);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(node.data + \"->\" + null);\n\t\t\t}\n\t\t}\n\t}\n\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/4_6.png\" />"
        },
        {
            "hints": [
                " #26. 4.7 Build a directed graph representing the dependencies. Each node is a project and an edge exists from A to B if B depends on A (A must be built before B). You can also build it the other way if it's easier for you.",
                " #47. 4.7 Look at this graph. ls there any node you can identify that will definitely be okay to build first?",
                " #60. 4.7 If you identify a node without any incoming edges, then it can definitely be built. Find this node (there could be multiple) and add it to the build order. Then, what does this mean for its outgoing edges?",
                " #85. 4.7 Once you decide to build a node, its outgoing edge can be deleted. After you've done this, can you find other nodes that are free and clear to build?",
                " #725. 17.18 Once you have the precomputation solution figured out, think about how you can reduce the space complexity. You should be able to get it down to O(SB) time and O( B) space (where B is the size of the larger array and S is the size of the smaller array).",
                " #133. 4.7 Pick an arbitrary node and do a depth-first search on it. Once we get to the end of a path, we know that this node can be the last one built, since no nodes depend on it. What does this mean about the nodes right before it?"
            ],
            "id": "4.7",
            "question": " Build Order: You are given a list of projects and a list of dependencies (which is a list of pairs of projects, where the second project is dependent on the first project). All of a project's dependencies must be built before the project is. Find a build order that will allow the projects to be built. If there is no valid build order, return an error. EXAMPLE Input: projects: a, b, c, d, e, f dependencies: (a, d), (f, b), (b, d), (f, a), (d, c) Output: f, e, a, b, d, c",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #70. 4.8 In the more naive algorithm, we had one method that indicated if x is a descendent of n, and another method that would recurse to find the first common ancestor. This is repeatedly searching the same elements in a subtree. We should merge this into one firstCommonAncestor function. What return values would give us the information we need?",
                " #76. 2.7 You can determine if two linked lists intersect by traversing to the end of each and comparing their tails.",
                " #28. 4.8 How would you figure out if p is a descendent of a node n?",
                " #36. 4.8 Start with the root. Can you identify if root is the first common ancestor? If it is not, can you identify which side of root the first common ancestor is on?",
                " #46. 4.8 Try a recursive approach. Check if p and q are descendants of the left subtree and the right subtree. If they are descendants of different subtrees, then the current node is the first common ancestor. If they are descendants of the same subtree, then that subtree holds the first common ancestor. Now, how do you implement this efficiently?",
                " #70. 4.8 In the more naive algorithm, we had one method that indicated if x is a descendent of n, and another method that would recurse to find the first common ancestor. This is repeatedly searching the same elements in a subtree. We should merge this into one firstCommonAncestor function. What return values would give us the information we need?",
                " #80. 4.8 The firstCommonAnc estor function could return the first common ancestor (if p and q are both contained in the tree), p if p is in the tree and not q, q if q is in the tree and not p, and null otherwise.",
                " #96. 4.8 Careful! Does your algorithm handle the case where only one node exists? What will happen? You might need to tweak the return values a bit."
            ],
            "id": "4.8",
            "question": " First Common Ancestor: Design an algorithm and write code to find the first common ancestor of two nodes in a binary tree. Avoid storing additional nodes in a data structure. NOTE: This is not necessarily a binary search tree.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #39. 4.9 What is the very first value that must be in each array?",
                " #48. 4.9 The root is the very first value that must be in every array. What can you say about the order of the values in the left subtree as compared to the values in the right subtree? Do the left subtree values need to be inserted before the right subtree?",
                " #66. 4.9 The relationship between the left subtree values and the right subtree values is, essen\u00ad tially, anything. The left subtree values could be inserted before the right subtree, or the reverse (right values before left), or any other ordering.",
                " #82. 4.9 Break this down into subproblems. Use recursion. If you had all possible sequences for the left subtree and the right subtree, how could you create all possible sequences for the entire tree?"
            ],
            "id": "4.9",
            "question": " BST Sequences: A binary search tree was created by traversing through an array from left to right and inserting each element. Given a binary search tree with distinct elements, print all possible arrays that could have led to this tree. EXAMPLE Input: [IMG MISSING!] Output: {2, 1, 3}, {2, 3, 1}",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #4. 4.10 If T2 is a subtree of Tl, how will its in-order traversal compare to Tl's? What about its pre-order and post-order traversal?",
                " #11. 4.10 The in-order traversals won't tell us much. After all, every binary search tree with the same values (regardless of structure) will have the same in-order traversal. This is what in-order traversal means: contents are in-order. (And if it won't work in the specific case of a binary search tree, then it certainly won't work for a general binary tree.) The pre\u00ad order traversal, however, is much more indicative.",
                " #18. 4.10 You may have concluded that if T2. preorderTraversal () is a substring of Tl. preorderTraversal (), then T2 is a subtree of Tl. This is almost true, except that the trees could have duplicate values. Suppose Tl and T2 have all duplicate values but different structures. The pre-order traversals will look the same even though T2 is not a subtree of Tl. How can you handle situations like this?",
                " #31. 4.10 Although the problem seems like it stems from duplicate values, it's really deeper than that. The issue is that the pre-order traversal is the same only because there are null nodes that we skipped over (because they're null). Consider inserting a placeholder value into the pre-order traversal string whenever you reach a null node. Register the null node as a \"real\" node so that you can distinguish between the different structures.",
                " #37. 4.10 Alternatively, we can handle this problem recursively. Given a specific node within Tl, can we check to see if its subtree matches T2?"
            ],
            "id": "4.1",
            "question": " Check Subtree: Tl and T2 are two very large binary trees, with Tl much bigger than T2. Create an algorithm to determine if T2 is a subtree of Tl. A tree T2 is a subtree of Tl if there exists a node n in Tl such that the subtree of n is identical to T2. That is, if you cut off the tree at node n, the two trees would be identical.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #42. 4.11 Be very careful in this problem to ensure that each node is equally likely and that your solution doesn't slow down the speed of standard binary search tree algorithms (like insert, find, and delete). Also, remember that even if you assume that it's a balanced binary search tree, this doesn't mean that the tree is full/complete/perfect.",
                " #54. 4.11 This is your own binary search tree class, so you can maintain any information about the tree structure or nodes that you'd like (provided it doesn't have other negative implica\u00ad tions, like making insert much slower). In fact, there's probably a reason the interview question specified that it was your own class. You probably need to store some addi\u00ad tional information in order to implement this efficiently.",
                " #62. 4.11 As a naive \"brute force\" algorithm, can you use a tree traversal algorithm to implement this algorithm? What is the runtime of this?",
                " #75. 4.11 Alternatively, you could pick a random depth to traverse to and then randomly traverse, stopping when you get to that depth. Think this through, though. Does this work?",
                " #89. 4.11 Picking a random depth won't help us much. First, there's more nodes at lower depths than higher depths. Second, even if we re-balanced these probabilities, we could hit a \"dead end\" where we meant to pick a node at depth 5 but hit a leaf at depth 3. Re-balancing the probabilities is an interesting , though.",
                " #99. 4.11 A naive approach that many people come up with is to pick a random number between 1 and 3. If it's 1, return the current node. If it's 2, branch left. If it's 3, branch right. This solution doesn't work. Why not? Is there a way you can adjust it to make it work?",
                " #112. 4.11 The reason that the earlier solution (picking a random number between 1 and 3) doesn't work is that the probabilities for the nodes won't be equal. For example, the root will be returned with probability even if there are 50+ nodes in the tree. Clearly, not all the nodes have probability so these nodes won't have equal probability. We can resolve this one issue by picking a random number between 1 and siz e_of_tree instead. This only resolves the issue for the root, though. What about the rest of the nodes? X, X,",
                " #119. 4.11 The issue with the earlier solution is that there could be more nodes on one side of a node than the other. So, we need to weight the probability of going left and right based on the number of nodes on each side. How does this work, exactly? How can we know the number of nodes?"
            ],
            "id": "4.11",
            "question": " Random Node: You are implementing a binary tree class from scratch which, in addition to insert, find, and delete, has a method getRandomNode() which returns a random node from the tree. All nodes should be equally likely to be chosen. Design and implement an algorithm for getRandomNode, and explain how you would implement the rest of the methods.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #6. 4.12 Try simplifying the problem. What if the path had to start at the root?",
                " #14. 4.12 Don't forget that paths could overlap. For example, if you're looking for the sum 6, the paths 1-> 3->2 and 1-> 3->2->4->-6->2 are both valid.",
                " #52. 4.12 If each path had to start at the root, we could traverse all possible paths starting from the root. We can track the sum as we go, incrementing totalPaths each time we find a path with our target sum. Now, how do we extend this to paths that can start anywhere? Remember: Just get a brute-force algorithm done. You can optimize later.",
                " #68. 4.12 To extend this to paths that start anywhere, we can just repeat this process for all nodes.",
                " #77. 4.12 If you've designed the algorithm as described thus far, you'll have an O(N log N) algorithm in a balanced tree. This is because there are N nodes, each of which is at depth O(log N) at worst. A node is touched once for each node above it. Therefore, the N nodes will be touched O ( log N) time. There is an optimization that will give us an O(N) algorithm.",
                " #87. 4.12 What work is duplicated in the current brute-force algorithm?",
                " #94. 4.12 Consider each path that starts from the root (there are N such paths) as an array. What our brute-force algorithm is really doing is taking each array and finding all contiguous subsequences that have a particular sum. We're doing this by computing all subarrays and their sums. It might be useful to just focus on this little subproblem. Given an array, how would you find all contiguous subsequences with a particular sum? Again, think about the duplicated work in the brute-force algorithm.",
                " #103. 4.12 We are looking for subarrays with sum targetSum. Observe that we can track in constant time the value of runningSum i , where this is the sum from element O through element i. For a subarray of element i through element j to have sum targetSum, runningSum i -i + targetSum must equal runningSum j (try drawing a picture of an array or a number line). Given that we can track the runningSum as we go, how can we quickly look up the number of indices i where the previous equation is true?",
                " #108. 4.12 Try using a hash table that maps from a runningSum value to he number of elements with this runningSum.",
                " #115. 4.12 Once you've solidified the algorithm to find all contiguous subarrays in an array with a given sum, try to apply this to a tree. Remember that as you're traversing and modifying the hash table, you may need to \"reverse the damage\" to the hash table as you traverse back up."
            ],
            "id": "4.12",
            "question": " Paths with Sum: You are given a binary tree in which each node contains an integer value (which might be positive or negative). Design an algorithm to count the number of paths that sum to a given value. The path does not need to start or end at the root or a leaf, but it must go downwards (traveling only from parent nodes to child nodes).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #137. 5.1 Break this into parts. Focus first on clearing the appropriate bits.",
                " #215. 5.1 It's easy to create a bit mask of Os at the beginning or \ufffdnd. But how do you create a bit mask with a bunch of zeroes in the middle? Do it the easy way: Create a bit mask for the left side and then another one for the right side. Then you can merge those."
            ],
            "id": "5.1",
            "question": " Insertion: You are given two 32-bit numbers, N and M, and two bit positions, i and j. Write a method to insert M into N such that M starts at bit j and ends at bit i. You can assume that the bits j through i have enough space to fit all of M. That is, if M = 10011, you can assume that there are at least 5 bits between j and i. You would not, for example, have j = 3 and i = 2, because M could not fully fit between bit 3 and bit 2. EXAMPLE Input: N 10000000000, M Output: N = 10001001100 10011, i 2, j",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #269. 5.2 How would you get the first digit in \u2022 893? If you multiplied by 10, you'd shift the values over to get 8. 93. What happens if you multiply by 2?",
                " #297. 5.2 Think about what happens for values that can't be represented accurately in binary."
            ],
            "id": "5.2",
            "question": " Binary to String: Given a real number between O and 1 (e.g., 0.72) that is passed in as a double, print the binary representation. If the number cannot be represented accurately in binary with at most 32 characters, print \"ERROR:'",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #226. 5.3 Flipping a O to a 1 can merge two sequences of 1 s-but only if the two sequences are separated by only one 0.",
                " #374. 6.8 Let X be the first drop of Egg 1. This means that Egg 2 would do X - 1 drops if Egg 1 broke. We want to try to keep the sum of Egg 1 and Egg 2's drops as constant as possible. If Egg 1 breaks on the second drop, then we want Egg 2 to do X - 2 drops. If Egg 1 breaks on the third drop, then we want Egg 2 to do X - 3 drops. This keeps the sum of Egg 1 and Egg 2 fairly constant. What is X?",
                " #352. 5.3 Try to do it in linear time, a single pass, and 0(1) space."
            ],
            "id": "5.3",
            "question": " Flip Bit to Win: You have an integer and you can flip exactly one bit from a 0 to a 1. Write code to find the length of the longest sequence of ls you could create. EXAMPLE Input: 1775 Output: 8 (or: 11011101111)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #747. 16.11 Think about it this way. You are picking K planks and there are two different types. All choices with 10 of the first type and 4 of the second type will have the same sum. Can you just iterate through all possible choices?",
                " #242. 5.4 Get Next: If you flip a 1 to a O and a Oto a 1, it will get bigger if the 0-> 1 bit is more signifi\u00ad cant than the 1->0 bit. How can you use this to create the next biggest number (with the same number of 1 s)?",
                " #372. 5.5 When you do a binary subtraction, you flip the rightmost Os to a 1, stopping when you get to a 1 (which is also flipped). Everything (all the 1 s and Os) on the left will stay put.",
                " #339. 5.4 Get Next: Flipping a Oto a 1 will create a bigger number. The farther right the index is the smaller the bigger number is. If we have a number like 1001, we want to flip the rightmost O (to create 1011 ). But if we have a number like 1010, we should not flip the rightmost 1.",
                " #358. 5.4 Get Next: We should flip the rightmost non-trailing 0. The number 1010 would become 1110. Once we've done that, we need to flip a 1 to a Oto make the number as small as possible, but bigger than the original number (1010). What do we do? How can we shrink the number?",
                " #375. 5.4 Get Next: We can shrink the number by moving all the 1 s to the right of the flipped bit as far right as possible (removing a 1 in the process).",
                " #390. 5.4 Get Previous: Once you've solved Get Next, try to invert the logic for Get Previous."
            ],
            "id": "5.4",
            "question": " Next Number: Given a positive integer, print the next smallest and the next largest number that have the same number of 1 bits in their binary representation.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #202. 5.5 What does it mean if A & B == 0?",
                " #267. 8.7 Approach 1: You can create all permutations of abed by computing all permutations of abc and then inserting d into each possible location within those.",
                " #302. 5.5 If ( n & ( n -1)) == 0, then this means that n and n - 1 never have a 1 in the same spot. Why would that happen?",
                " #346. 5.5 What is the relationship between how n looks and how n - 1 looks? Walk through a binary subtraction.",
                " #372. 5.5 When you do a binary subtraction, you flip the rightmost Os to a 1, stopping when you get to a 1 (which is also flipped). Everything (all the 1 s and Os) on the left will stay put.",
                " #383. 5.5 Picture n and n -1. To subtract 1 from n, you flipped the rightmost 1 to a O and all the Os on its right to 1 s. If n & n -1 == 0, then there are no 1 s to the left of the first 1. What does that mean about n?",
                " #398. 5.5 We know that n must have only one 1 if n & ( n -1) == 0. What sorts of numbers have only one 1?"
            ],
            "id": "5.5",
            "question": " Debugger: Explain what the following code does: ( ( n & ( n-1)) == 0).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #336. 5.6 How would you figure out how many bits are different between two numbers?",
                " #369. 5.6 Think about what an XOR indicates. If you do a XOR b, where does the result have 1 s? Where does it have Os?"
            ],
            "id": "5.6",
            "question": " Conversion: Write a function to determine the number of bits you would need to flip to convert integer A to integer B. EXAMPLE Input: 29 (or: 11101), 15 (or: 01111) Output: 2 pg286",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #745. 16.5 Have you considered that 25 actually accounts for two factors of 5?",
                " #248. 5.7 Can you create a number that represents just the even bits? Then can you shift the even bits over by one?",
                " #328. 5.7 The value 1010 in binary is 10 in decimal or OxA in hex. What will a sequence of 101010 ... be in hex? That is, how do you represent an alternating sequence of 1 s and Os with 1 s in the odd places? How do you do this for the reverse (1 s in the even spots)?",
                " #355. 5.7 Try masks 0xaaaaaaaa and 0x55555555 to select the even and odd bits. Then try shifting the even and odd bits around to create the right number."
            ],
            "id": "5.7",
            "question": " Pairwise Swap: Write a program to swap odd and even bits in an integer with as few instructions as possible (e.g., bit 0 and bit 1 are swapped, bit 2 and bit 3 are swapped, and so on).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #366. 5.8 First try the naive approach. Can you set a particular \"pixel\"?",
                " #384. 5.8 What about the start and end of the line? Do you need to set those pixels individually, or can you set them all at once?"                
            ],
            "id": "5.8",
            "question": " Draw Line: A monochrome screen is stored as a single array of bytes, allowing eight consecutive pixels to be stored in one byte. The screen has width w, where w is divisible by 8 (that is, no byte will be split across rows). The height of the screen, of course, can be derived from the length of the array and the width. Implement a function that draws a horizontal line from ( xl, y) to ( x2, y). The method signature should look something like: drawline(byte[] screen, int width, int xl, int x2, int y)",
            "solution": "<pre>package Q5_08_Draw_Line;\n\npublic class Question {\n\tpublic static int computeByteNum(int width, int x, int y) {\n\t\treturn (width * y + x) / 8;\n\t}\n\t\n\tpublic static void drawLine(byte[] screen, int width, int x1, int x2, int y) {\n\t\tint start_offset = x1 % 8;\n\t\tint first_full_byte = x1 / 8;\n\t\tif (start_offset != 0) {\n\t\t\tfirst_full_byte++;\n\t\t}\n\t\t\n\t\tint end_offset = x2 % 8;\n\t\tint last_full_byte = x2 / 8;\n\t\tif (end_offset != 7) {\n\t\t\tlast_full_byte--;\n\t\t}\n\t\t\n\t\t// Set full bytes\n\t\tfor (int b = first_full_byte; b <= last_full_byte; b++) {\n\t\t\tscreen[(width / 8) * y + b] = (byte) 0xFF;\n\t\t}\n\t\t\n\t\tbyte start_mask = (byte) (0xFF >> start_offset);\n\t\tbyte end_mask = (byte) ~(0xFF >> (end_offset + 1));\n\t\t\n\t\t// Set start and end of line\n\t\tif ((x1 / 8) == (x2 / 8)) { // If x1 and x2 are in the same byte\n\t\t\tbyte mask = (byte) (start_mask & end_mask);\n\t\t\tscreen[(width / 8) * y + (x1 / 8)] |= mask;\n\t\t} else {\n\t\t\tif (start_offset != 0) {\n\t\t\t\tint byte_number = (width / 8) * y + first_full_byte - 1;\n\t\t\t\tscreen[byte_number] |= start_mask;\n\t\t\t}\n\t\t\tif (end_offset != 7) {\n\t\t\t\tint byte_number = (width / 8) * y + last_full_byte + 1;\n\t\t\t\tscreen[byte_number] |= end_mask;\n\t\t\t} \n\t\t}\n\t}\n\t\n\tpublic static void printByte(byte b) {\n\t\tfor (int i = 7; i >= 0; i--) {\n\t\t\tchar c = ((b >> i) & 1) == 1 ? '1' : '_';\n\t\t\tSystem.out.print(c);\n\t\t}\n\t}\n\t\n\tpublic static void printScreen(byte[] screen, int width) {\n\t\tint height = screen.length * 8 / width;\n\t\tfor (int r = 0; r < height; r++) {\n\t\t\tfor (int c = 0; c < width; c+=8) {\n\t\t\t\tbyte b = screen[computeByteNum(width, c, r)];\n\t\t\t\tprintByte(b);\n\t\t\t}\n\t\t\tSystem.out.println(\"\");\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint width = 8 * 1;\n\t\tint height = 1;\n\t\tfor (int r = 0; r < height; r++) {\n\t\t\tfor (int c1 = 0; c1 < width; c1++) {\n\t\t\t\tfor (int c2 = c1; c2 < width; c2++) {\n\t\t\t\t\tbyte[] screen = new byte[width * height / 8];\n\n\t\t\t\t\tSystem.out.println(\"row: \" + r + \": \" + c1 + \" -> \" + c2);\n\t\t\t\t\tdrawLine(screen, width, c1, c2, r);\n\t\t\t\t\tprintScreen(screen, width);\n\t\t\t\t\tSystem.out.println(\"\n\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/5_8.png\" />"
        },
        {
            "hints": [
                " #186. 6.1 You can only use the scale once. This means that all, or almost all, of the bottles must be used. They also must be handled in different ways or else you couldn't distinguish between them.",
                " #252. 6.1 What happens if you put one pill from each bottle on the scale? What if you put two pills from each bottle on the scale?",
                " #319. 6.1 Imagine there were just three bottles and one had heavier pills. Suppose you put different numbers of pills from each bottle on the scale (for example, bottle 1 has 5 pills, bottle 2 has 2 pills, and bottle 3 has 9 pills). What would the scale show?",
                " #387. 6.1 You should be able to have an equation that tells you the heavy bottle based on the weight."
            ],
            "id": "6.1",
            "question": " The Heavy Pill: You have 20 bottles of pills. 19 bottles have 1.0 gram pills, but one has pills of weight 1.1 grams. Given a scale that provides an exact measurement, how would you find the heavy bottle? You can only use the scale once.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #239. 6.2 To calculate the probability of winning the second game, start with calculating the probability of making the first hoop, the second hoop, and not the third hoop.",
                " #284. 6.2 If two events are mutually exclusive (they can never occur simultaneously), you can add their probabilities together. Can you find a set of mutually exclusive events that repre\u00ad sent making two out of three hoops?",
                " #323. 6.2 The probability of making two out of three shots is probability(make shot 1, make shot 2, miss shot 3) + probability(make shot 1, miss shot 2, make shot 3) + probability(miss shot 1, make shot 2, make shot 3) + probability(make shot 1, make shot 2, make shot 3)."
            ],
            "id": "6.2",
            "question": " Math and Logic Puzzles Basketball: You have a basketball hoop and someone says that you can play one of two games. Game 1: You get one shot to make the hoop. Game 2: You get three shots and you have to make two of three shots. If p is the probability of making a particular shot, for which values of p should you pick one game or the other?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #367. 6.3 Picture a domino laying down on the board. How many black squares does it cover? How many white squares?",
                " #397. 6.3 How many black squares are there on the board? How many white squares?"
            ],
            "id": "6.3",
            "question": " Dominos: There is an 8x8 chessboard in which two diagonally opposite corners have been cut off. You are given 31 dominos, and a single domino can cover exactly two squares. Can you use the 31 dominos to cover the entire board? Prove your answer (by providing an example or showing why it's impossible).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #157. 6.4 In what cases will they not collide?",
                " #195. 6.4 The only way they won't collide is if all three are walking in the same direction. What's the probability of all three walking clockwise?",
                " #296. 6.4 You can think about this either as the probability(3 ants walking clockwise) + proba\u00ad bility(3 ants walking counter-clockwise). Or, you can think about it as: The first ant picks a direction. What's the probability of the other ants picking the same direction?"
            ],
            "id": "6.4",
            "question": " Ants on a Triangle: There are three ants on different vertices of a triangle. What is the probability of collision (between any two or all of them) if they start walking on the sides of the triangle? Assume that each ant randomly picks a direction, with either direction being equally likely to be chosen, and that they walk at the same speed. Similarly, find the probability of collision with n ants on an n-vertex polygon.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #149. 6.5 Play around with the jugs of water, pouring water back and forth, and see if you can measure anything other than 3 quarts or 5 quarts. That's a start.",
                " #379. 6.5 If you fill the 5-quart jug and then use it to fill the 3-quart jug, you'll have two quarts left in the 5-quart jug. You can either keep those two quarts where they are, or you can dump the contents of the smaller jug and pour the two quarts in there.",
                " #400. 6.5 Once you've developed a way to solve this problem, think about it more broadly. If you are given a jug of size X and another jug of size Y, can you always use it to measure Z?"
            ],
            "id": "6.5",
            "question": " Jugs of Water: You have a five-quart jug, a three-quart jug, and an unlimited supply of water (but no measuring cups). How would you come up with exactly four quarts of water? Note that the jugs are oddly shaped, such that filling up exactly \"half\" of the jug would be impossible.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #278. 8.7 Approach 2: If you had all permutations of two-character substrings, could you generate all permutations of three-character substrings?",
                " #282. 6.6 Suppose there were exactly one blue-eyed person. What would that person see? When wou Id they leave?",
                " #341. 6.6 Now suppose there were two blue-eyed people. What would they see? What would they know? When would they leave? Remember your answer from the prior hint. Assume they know the answer to the earlier hint.",
                " #370. 6.6 Build up from this. What if there were three blue-eyed people? What if there were four blue-eyed people?"
            ],
            "id": "6.6",
            "question": " Blue-Eyed Island: A bunch of people are living on an island, when a visitor comes with a strange order: all blue-eyed people must leave the island as soon as possible. There will be a flight out at 8:00 pm every evening. Each person can see everyone else's eye color, but they do not know their own (nor is anyone allowed to tell them). Additionally, they do not know how many people have blue eyes, although they do know that at least one person does. How many days will it take the blue-eyed people to leave?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #154. 6.7 Observe that each family will have exactly one girl.",
                " #171. 6.7 You can attempt this mathematically, although the math is pretty difficult. You might find it easier to estimate it up to families of, say, 6 children. This won't give you a good mathematical proof, but it might point you in the right direction of what the answer might be.",
                " #201. 6.7 Observe that biology hasn't changed; only the conditions under which a family stops having kids has changed. Each pregnancy has a 50% odds of being a boy and a 50% odds of being a girl."
            ],
            "id": "6.7",
            "question": " The Apocalypse: In the new post-apocalyptic world, the world queen is desperately concerned about the birth rate. Therefore, she decrees that all families should ensure that they have one girl or else they face massive fines. If all families abide by this policy-that is, they have continue to have children until they have one girl, at which point they immediately stop-what will the gender ratio of the new generation be? (Assume that the odds of someone having a boy or a girl on any given pregnancy is equal.) Solve this out logically and then write a computer simulation of it.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #233. 6.8 As a first approach, you might try something like binary search. Drop it from the 50th floor, then the 75th, then the 88th, and so on. The problem is that if the first egg drops at the 50th floor, then you'll need to start dropping the second egg starting from the 1st floor and going up. This could take, at worst, 50 drops (the 50th floor drop, the 1st floor drop, the 2nd floor drop, and up through the 49th floor drop). Can you beat this?",
                " #294. 6.8 It's actually better for the first drop to be a bit lower. For example, you could drop at the 10th floor, then the 20th floor, then the 30th floor, and so on. The worst case here will be 19 drops (10, 20, ... , 100, 91, 92, ... , 99). Can you beat that? Try not randomly guessing at different solutions. Rather, think deeper. How is the worst case defined? How does the number of drops of each egg factor into that?",
                " #333. 6.8 If we drop Egg 1 at fixed intervals (e.g., every 10 floors), then the worst case is the worst case for Egg 1 + the worst case for Egg 2. The problem with our earlier solutions is that as Egg 1 does more work, Egg 2 doesn't do any less work. Ideally, we'd like to balance this a bit. As Egg 1 does more work (has survived more drops), Egg 2 should have less work to do. What might this mean?",
                " #357. 6.8 Try dropping Egg 1 at bigger intervals at the beginning and then at smaller and smaller intervals. The idea is to keep the sum of Egg 1 and Egg 2's drops as constant as possible. For each additional drop that Egg 1 takes, Egg 2 takes one fewer drop. What is the right interval?",
                " #374. 6.8 Let X be the first drop of Egg 1. This means that Egg 2 would do X - 1 drops if Egg 1 broke. We want to try to keep the sum of Egg 1 and Egg 2's drops as constant as possible. If Egg 1 breaks on the second drop, then we want Egg 2 to do X - 2 drops. If Egg 1 breaks on the third drop, then we want Egg 2 to do X - 3 drops. This keeps the sum of Egg 1 and Egg 2 fairly constant. What is X?",
                " #395. 6.8 I got 14 drops in the worst case. What did you get?"
            ],
            "id": "6.8",
            "question": " The Egg Drop Problem: There is a building of 100 floors. If an egg drops from the Nth floor or above, it will break. If it's dropped from any floor below, it will not break. You're given two eggs. Find N, while minimizing the number of drops for the worst case.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #139. 6.9 Given a specific door x, on which rounds will it be toggled (open or closed)?",
                " #172. 6.9",
                " #264. 6.9 Note: If an integer xis divisible by a, and b = x / a, then x is also divisible by b. Does this mean that all numbers have an even number of factors?",
                " #306. 6.9 The number 3 has an even number of factors (1 and 3). The number 12 has an even number of factors (1, 2, 3, 4, 6, 12). What numbers do not? What does this tell you about the doors?"
            ],
            "id": "6.9",
            "question": " 100 Lockers: There are 100 closed lockers in a hallway. A man begins by opening all 100 lockers. Next, he closes every second locker. Then, on his third pass, he toggles every third locker (closes it if it is open or opens it if it is closed). This process continues for 100 passes, such that on each pass i, the man toggles every ith locker. After his 100th pass in the hallway, in which he toggles only locker #100, how many lockers are open? 297",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [],
            "id": "6.10",
            "question": " Poison: You have 1000 bottles of soda, and exactly one is poisoned. You have 10 test strips which can be used to detect poison. A single drop of poison will turn the test strip positive permanently. You can put any number of drops on a test strip at once and you can reuse a test strip as many times as you'd like (as long as the results are negative). However, you can only run tests once per day and it takes seven days to return a result. How would you figure out the poisoned bottle in as few days as possible? FOLLOW UP Write code to simulate your approach. Hlnts:#146, #163, #183, #191, #205, #221, #230, #241, #249",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #275. 7.1 How, if at all, will you handle aces?"
            ],
            "id": "7.1",
            "question": " Deck of Cards: Design the data structures for a generic deck of cards. Explain how you would subclass the data structures to implement blackjack.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #363. 7.2 Before coding, make a list of the objects you need and walk through the common algo\u00ad rithms. Picture the code. Do you have everything you need?"
            ],
            "id": "7.2",
            "question": " Call Center: Imagine you have a call center with three levels of employees: respondent, manager, and director. An incoming telephone call must be first allocated to a respondent who is free. If the respondent can't handle the call, he or she must escalate the call to a manager. If the manager is not free or not able to handle it, then the call should be escalated to a director. Design the classes and data structures for this problem. Implement a method dispatchCall() which assigns a call to the first available employee. 7 .3 Jukebox: Design a musical jukebox using object-oriented principles.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #258. 7.4 Does the parking lot have multiple levels? What \"features\" does it support? Is it paid? What types of vehicles?"
            ],
            "id": "7.4",
            "question": " Parking Lot: Design a parking lot using object-oriented principles.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #344. 7.5 Think about all the different functionality a system to read books online would have to support. You don't have to do everything, but you should think about making your assumptions explicit."
            ],
            "id": "7.5",
            "question": " Online Book Reader: Design the data structures for an online book reader system.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #238. 7.6 Think about how you might record the position of a piece when you find it. Should it be stored by row and location?",
                " #283. 7.6 Which will be the easiest pieces to match first? Can you start with those? Which will be the next easiest, once you've nailed those down?"
            ],
            "id": "7.6",
            "question": " Jigsaw: Implement an NxN jigsaw puzzle. Design the data structures and explain an algorithm to solve the puzzle. You can assume that you have a fitsWith method which, when passed two puzzle edges, returns true if the two edges belong together.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #213. 7.7 As always, scope the problem. Are \"friendships\" mutual? Do status messages exist? Do you support group chat?",
                " #245. 7.7 This is a good problem to think about the major system components or technologies that would be useful.",
                " #271. 7.7 How will you know if a user signs offiine?"
            ],
            "id": "7.7",
            "question": " Chat Server: Explain how you would design a chat server. In particular, provide details about the various backend components, classes, and methods. What would be the hardest problems to solve?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #179. 7.8 Should white pieces and black pieces be the same class? What are the pros and cons of this?",
                " #228. 7.8 What class should maintain the score?"
            ],
            "id": "7.8",
            "question": " Othello: Othello is played as follows: Each Othello piece is white on one side and black on the other. When a piece is surrounded by its opponents on both the left and right sides, or both the top and bottom, it is said to be captured and its color is flipped. On your turn, you must capture at least one of your opponent's pieces. The game ends when either user has no more valid moves. The win is assigned to the person with the most pieces. Implement the object-oriented design for Othello.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #389. 7.9 The rotate () method should be able to run in 0( 1) time."                   
            ],
            "id": "7.9",
            "question": " Circular Array: Implement a CircularArray class that supports an array-like data structure which can be efficiently rotated. If possible, the class should use a generic type (also called a template), and should support iteration via the standard for (Obj o : circularArray) notation.",
            "solution": "<pre>package Q7_09_Circular_Array;\n\nimport java.util.Iterator;\n\npublic class CircularArray<T> implements Iterable<T> {\n\tprivate T[] items;\n\tprivate int head = 0;\n\t\n\tpublic CircularArray(int size) {\n\t\titems = (T[]) new Object[size];\n\t}\n\t\n\tprivate int convert(int index) {\n\t\tif (index < 0) {\n\t\t\tindex += items.length;\n\t\t}\n\t\treturn (head + index) % items.length;\n\t}\n\t\n\tpublic void rotate(int shiftRight) {\n\t\thead = convert(shiftRight);\n\t}\n\t\n\tpublic T get(int i) {\n\t\tif (i < 0 || i >= items.length) {\n\t\t\tthrow new java.lang.IndexOutOfBoundsException(\"Index \" + i + \" is out of bounds\");\n\t\t}\n\t\treturn items[convert(i)];\n\t}\n\t\n\tpublic void set(int i, T item) {\n\t\titems[convert(i)] = item;\n\t}\n\t\n\tpublic Iterator<T> iterator() {\n\t\treturn new CircularArrayIterator();\n\t}\n\t\n\tprivate class CircularArrayIterator implements Iterator<T> {\n\t\tprivate int _current = -1;\n\t\t\n\t\tpublic CircularArrayIterator() { }\n\t\t\n\t\t@Override\n\t\tpublic boolean hasNext() {\n\t\t\treturn _current < items.length - 1;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic T next() {\n\t\t\t_current++;\n\t\t\treturn (T) items[convert(_current)];\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void remove() {\n\t\t\tthrow new UnsupportedOperationException(\"Remove is not supported by CircularArray\");\n\t\t}\n\t}\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",           
            "fullSolution": "<img src=\"/assets/images/solutions/7_9a.png\" /><br /><img src=\"/assets/images/solutions/7_9b.png\" />"
        },
        {
            "hints": [
                " #351. 7.10 Should number cells, blank cells, and bomb cells be separate classes?",
                " #361. 7.10 What is the algorithm to place the bombs around the board?",
                " #377. 7.1O To place the bombs randomly on the board:Think about the algorithm to shuffle a deck of cards. Can you apply a similar technique?",
                " #386. 7.10 How do you count the number of bombs neighboring a cell? Will you iterate through all cells?",
                " #399. 7.10 When you click on a blank cell, what is the algorithm to expand the neighboring cells?"
            ],
            "id": "7.10",
            "question": " 7.10 Minesweeper: Design and implement a text-based Minesweeper game. Minesweeper is the classic single-player computer game where an NxN grid has B mines (or bombs) hidden across the grid. The remaining cells are either blank or have a number behind them. The numbers reflect the number of bombs in the surrounding eight cells. The user then uncovers a cell. If it is a bomb, the player loses. If it is a number, the number is exposed. If it is a blank cell, this cell and all adjacent blank cells (up to and including the surrounding numeric cells) are exposed. The player wins when all non-bomb cells are exposed. The player can also flag certain places as potential bombs. This doesn't affect game play, other than to block the user from accidentally clicking a cell that is thought to have a bomb. (Tip for the reader: if you're not familiar with this game, please play a few rounds on line first.) <img src=\"/assets/images/solutions/_7_10.png\" />",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #141. 7.11 This is not as complicated as it sounds. Start by making a list of the key objects in the system, then think about how they interact.",
                " #216. 7.11 What is the relationship between files and directories?"
            ],
            "id": "7.11",
            "question": " File System: Explain the data structures and algorithms that you would use to design an in-memory file system. Illustrate with an example in code where possible.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #287. 7.12 In order to handle collisions, the hash table should be an array of linked lists.",
                " #307. 7.12 Think carefully about what information the linked list node needs to contain."
            ],
            "id": "7.12",
            "question": " Hash Table: sions. Design and implement a hash table which uses chaining (linked lists) to handle colli\u00ad",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #152. 8.1 Approach this from the top down. What is the very last hop the child made?",
                " #178. 8.1 If we knew the number of paths to each of the steps before step 100, could we compute the number of steps to 100?",
                " #217. 8.1 We can compute the number of steps to 100 by the number of steps to 99, 98, and 97. This corresponds to the child hopping 1, 2, or 3 steps at the end. Do we add those or multiply them?That is: Is it f(100) = f(99) + f(98) + f(97) or f(100) = f(99) * f(98) * f(97)?",
                " #237. 8.1 We multiply the values when it's \"we do this then this:' We add them when it's \"we do this or this:'",
                " #262. 8.1 What is the runtime of this method? Think carefully. Can you optimize it?",
                " #359. 8.1 Try memoization as a way to optimize an inefficient recursive program."
            ],
            "id": "8.1",
            "question": " Triple Step: A child is running up a staircase with n steps and can hop either 1 step, 2 steps, or 3 steps at a time. Implement a method to count how many possible ways the child can run up the stairs.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #331. 8.2 For the robot to reach the last cell, it must find a path to the second-to-last cells. For it to find a path to the second-to-last cells, it must find a path to the third-to-last cells.",
                " #360. 8.2 Simplify this problem a bit by first figuring out if there's a path. Then, modify your algo\u00ad rithm to track the path.",
                " #388. 8.2 Think again about the efficiency of your algorithm. Can you optimize it?"
            ],
            "id": "8.2",
            "question": " Robot in a Grid: Imagine a robot sitting on the upper left corner of grid with r rows and c columns. The robot can only move in two directions, right and down, but certain cells are \"off limits\" such that the robot cannot step on them. Design an algorithm to find a path for the robot from the top left to the bottom right. \ufffdPrl 344",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #204. 8.3 Your brute force algorithm probably ran in O(N) time. If you're trying to beat that runtime, what runtime do you think you will get to? What sorts of algorithms have that runtime?",
                " #240. 8.3 Can you solve the problem in O(log N)?",
                " #286. 8.3 Binary search has a runtime of O( log N). Can you apply a form of binary search to the problem?",
                " #340. 8.3 Given a specific index and value, can you identify if the magic index would be before or after it?"
            ],
            "id": "8.3",
            "question": " Magic Index: A magic index in an array A [ 0 \u2022\u2022\u2022 n -1] is defined to be an index such that A[ i] = i. Given a sorted array of distinct integers, write a method to find a magic index, if one exists, in array A. FOLLOW UP What if the values are not distinct?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #273. 8.4 How can you build all subsets of {a, b, c} from the subsets of {a, b}?",
                " #290. 8.4 Anything that is a subset of {a, b} is also a subset of {a, b, c}. Which sets are subsets of{a, b, c}but not{a, b}?",
                " #338. 8.4 Subsets that contain c will be subsets {a, b, c} but not {a, b}. Can you build these subsets from the subsets of {a, b}?",
                " #354. 8.4 You can build the remaining subsets by adding c to all the subsets of {a, b}.",
                " #373. 8.4 You can also do this by mapping each subset to a binary number. The ith bit could represent a \"boolean\"flag for whether an element is in the set."
            ],
            "id": "8.4",
            "question": " Power Set: Write a method to return all subsets of a set. 348",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #166. 8.5 Think about multiplying 8 by 9 as counting the number of cells in a matrix with width 8 and height 9.",
                " #203. 8.5 If you wanted to count the cells in an 8x9 matrix, you could count the cells in a 4x9 matrix and then double it.",
                " #227. 8.5 Think about how you might handle this for odd numbers.",
                " #234. 8.5 If there's duplicated work across different recursive calls, can you cache it?",
                " #246. 8.5 If you're doing 9*7 (both odd numbers), then you could do 4*7 and 5*7.",
                " #280. 8.5 Alternatively, if you're doing 9 * 7, you could do 4*7, double that, and then add 7."
            ],
            "id": "8.5",
            "question": " Recursive Multiply: Write a recursive function to multiply two positive integers without using the *operator.You can use addition, subtraction, and bit shifting, but you should minimize the number of those operations. pg350",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #744. 16.20 With preprocessing, we can actually get the lookup time down to O( 1).",
                " #224. 8.6 You can easily move the smallest disk from one tower to another. It's also pretty easy to move the smallest two disks from one tower to another. Can you move the smallest three disks?",
                " #250. 8.6 Think about moving the smallest disk from tower X=0 to towerY=2 using tower Z=1 as a temporary holding spot as having a solution for f(1, X=0, Y=2, Z=1). Moving the smallest two disks is f(2, X=0, Y=2, Z=1). Given that you have a solution for f(l, X=0, Y=2, Z=l) andf(2, X=0, Y=2, Z=1),can you solvef(3, X=0, Y=2, Z=1)?",
                " #272. 8. 6 Observe that it doesn't really matter which tower is the source, destination, or buffer. You can dof(3, X=0, Y=2, Z=l) byfirst doingf(2, X=0, Y=l, Z=2) (moving two disks from tower Oto tower 1, using tower 2 as a buffer), then moving disk 3 from tower Oto tower 2, then doing f ( 2, X=l, Y=2, Z=0) (moving two disks from tower 1 to tower 2, using tower Oas a buffer). How does this process repeat?",
                " #318. 8.6 If you're having trouble with recursion, then try trusting the recursive process more. Once you've figured out how to move the top two disks from tower O to tower 2, trust that you have this working. When you need to move three disks, trust that you can move two disks from one tower to another. Now, two disks have been moved. What do you do about the third?"
            ],
            "id": "8.6",
            "question": " Towers of Hanoi: In the classic problem of the Towers of Hanoi, you have 3 towers and N disks of different sizes which can slide onto any tower. The puzzle starts with disks sorted in ascending order of size from top to bottom (i.e., each disk sits on top of an even larger one). You have the following constraints: (1) Only one disk can be moved at a time. (2) A disk is slid off the top of one tower onto another tower. (3) A disk cannot be placed on top of a smaller disk. Write a program to move the disks from the first tower to the last using stacks.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #150. 8.7 Approach 1: Suppose you had all permutations of abc . How can you use that to get all permutations of abed?",
                " #185. 8.7 Approach 1: The permutations of abc represent all ways of ordering abc. Now, we want to create all orderings of abed. Take a specific ordering of abed, such as bdea. This bdea string represents an ordering of abe, too: Remove the d and you get bea. Given the string bca, can you create all the\"related\" orderings that include d, too?",
                " #200. 8.7 Approach 1: Given a string such as bca, you can create all permutations of abed that have {a, b, c} in the order bca by inserting d into each possible location: dbca, bdca, bed a, bead. Given all permutations of abc, can you then create all permutations of abed?",
                " #267. 8.7 Approach 1: You can create all permutations of abed by computing all permutations of abc and then inserting d into each possible location within those.",
                " #278. 8.7 Approach 2: If you had all permutations of two-character substrings, could you generate all permutations of three-character substrings?",
                " #309. 8.7 Approach 2: To generate a permutation of abed, you need to pick an initial character. It can be a, b, c, or d. You can then permute the remaining characters. How can you use this approach to generate all permutations of the full string?",
                " #335. 8.7 Approach 2: To generate all permutations of abed, pick each character (a, b, c, or d) as a starting character. Permute the remaining characters and prepend the starting character. How do you permute the remaining characters? With a recursive process that follows the same logic.",
                " #356. 8.7 Approach 2: You can implement this approach by having the recursive function pass back the list of the strings, and then you prepend the starting character to it. Or, you can push down a prefix to the recursive calls."
            ],
            "id": "8.7",
            "question": " Permutations without Dups: Write a method to compute all permutations of a string of unique characters.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #222. 8.8 Try getting the count of each character. For example, ABCMC has 3 As, 2 Cs, and 1 B.",
                " #255. 8.8 To get all permutations with 3 As, 2 Cs, and 1 B, you need to first pick a starting char\u00ad acter: A, B, or C. If it's an A, then you need all permutations with 2 As, 2 Cs, and 1 B."
            ],
            "id": "8.8",
            "question": " Permutations with Dups: Write a method to compute all permutations of a string whose charac\u00ad ters are not necessarily unique. The list of permutations should not have duplicates.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #138. 8.9 Try the Base Case and Build approach.",
                " #174. 8.9 Suppose we had all valid ways of writing two pairs of parentheses. How could we use this to get all valid ways of writing three pairs?",
                " #209. 8.9 The problem with the solution suggested by the earlier hint is that it might have dupli\u00ad cate values. We could eliminate this by using a hash table.",
                " #243. 8.9 Alternatively, we could think about doing this by moving through the string and adding left and right parens at each step. Will this eliminate duplicates? How do we know if we can add a left or right paren?",
                " #265. 8. 9 Adding a left or right paren at each step will eliminate duplicates. Each substring will be unique at each step. Therefore, the total string will be unique.",
                " #295. 8.9 We can ensure that this string is valid by counting the number of left and right parens. It is always valid to add a left paren, up until the total number of pairs of parens. We can add a right paren as long ascount(left parens) <= count(right parens)."
            ],
            "id": "8.9",
            "question": " Parens: Implement an algorithm to print all valid (e.g., properly opened and closed) combinations of n pairs of parentheses. EXAMPLE Input: 3 Output: ( ( () ) ) , ( () () ) , ( () ) () , () ( () ) , () () ()",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #364. 8.10 Think about this as a graph.",
                " #382. 8.10 You can implement this using depth-first search (or breadth-first search). Each adjacent pixel of the \"right\" color is a connected edge."
            ],
            "id": "8.1O",
            "question": " Paint Fill: Implement the \"paint fill\" function that one might see on many image editing programs. That is, given a screen (represented by a two-dimensional array of colors), a point, and a new color, fill in the surrounding area until the color changes from the original color.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #300. 8.11 Try breaking it down into subproblems. If you were making change, what is the first choice you would make?",
                " #324. 8.11 If you were making change, the first choice you might make is how many quarters you need to use.",
                " #343. 8.11 Once you've decided to use two quarters to make change for 98 cents, you now need to figure out how many ways to make change for 48 cents using nickels, dimes, and pennies.",
                " #380. 8.11 Analyze your algorithm. Is there any repeated work? Can you optimize this? .",
                " #394. 8.11 Try using memoization."
            ],
            "id": "8.11",
            "question": " Coins: Given an infinite number of quarters (25 cents), dimes (10 cents), nickels (5 cents), and pennies (1 cent), write code to calculate the number of ways of representing n cents.",
            "solution": "<pre>\npackage Q8_11_Coins;\n\npublic class Question {\t\n\tpublic static int makeChange(int amount, int[] denoms, int index) {\n\t\tif (index >= denoms.length - 1) return 1; // one denom remaining -> one way to do it\n\t\tint denomAmount = denoms[index];\n\t\tint ways = 0;\n\t\tfor (int i = 0; i * denomAmount <= amount; i++) {\n\t\t\tint amountRemaining = amount - i * denomAmount;\n\t\t\tways += makeChange(amountRemaining, denoms, index + 1); // go to next denom\n\t\t}\n\t\treturn ways;\n\t}\n\t\n\tpublic static int makeChange(int amount, int[] denoms) {\n\t\treturn makeChange(amount, denoms, 0);\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[] denoms = {25, 10, 5, 1};\n\t\tint ways = makeChange(300322, denoms);\n\t\tSystem.out.println(ways);\n\t}\n\n}\n</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/8_11.png\" />"
        },
        {
            "hints": [
                " #308. 8.12 We know that each row must have a queen. Can you try all possibilities?",
                " #350. 8.12 Each row must have a queen. Start with the last row. There are eight different columns on which you can put a queen. Can you try each of these?",
                " #371. 8.12 Break this down into smaller subproblems. The queen at row 8 must be at column 1, 2, 3, 4, 5, 6, 7, or 8. Can you print all ways of placing eight queens where a queen is at row 8 and column 3? You then need to check all the ways of placing a queen on row 7."
            ],
            "id": "8.12",
            "question": " Eight Queens: Write an algorithm to print all ways of arranging eight queens on an 8x8 chess board so that none of them share the same row, column, or diagonal. In this case, \"diagonal\" means all diagonals, not just the two that bisect the board.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #194. 8.13 We can sort the boxes by any dimension in descending order. This will give us a partial order for the boxes, in that boxes later in the array must appear before boxes earlier in the array.",
                " #274. 9.5 Think about how you could design this for a single machine. Would you want a hash table? How would that work?",
                " #260. 8.13 Think about the first decision you have to make. The first decision is which box will be at the bottom.",
                " #322. 8.13 Once we pick the box on the bottom, we need to pick the second box. Then the third box.",
                " #368. 8.13 Once you have a basic recursive algorithm implemented, think about if you can opti\u00ad mize it. Are there any repeated subproblems?",
                " #378. 8.13 Alternatively, we can think about the repeated choices as: Does the first box go on the stack? Does the second box go on the stack? And so on."
            ],
            "id": "8.13",
            "question": " Stack of Boxes: You have a stack of n boxes, with widths w i , heights h i , and depths d i . The boxes cannot be rotated and can only be stacked on top of one another if each box in the stack is strictly larger than the box above it in width, height, and depth. Implement a method to compute the height of the tallest possible stack. The height of a stack is the sum of the heights of each box.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #748. 17.25 Can you use a trie to terminate early when a rectangle looks invalid?",
                " #168. 8.14 We can think about each possibility as each place where we can put parentheses. This means around each operator, such that the expression is split at the operator. What is the base case?",
                " #197. 8.14 The base case is when we have a single value, 1 or 0.",
                " #305. 8.14 If your code looks really lengthy, with a lot of if's (for each possible operator, \"target\" boolean result, and left/right side), think about the relationship between the different parts. Try to simplify your code. It should not need a ton of complicated if-state\u00ad ments. For example, consider expressions of the form <LEFT>OR<RIGHT> versus <LEFT>AND<RIGHT>. Both may need to know the number of ways that the <LEFT> evaluates to true. See what code you can reuse.",
                " #327. 8.14 Look at your recursion. Do you have repeated calls anywhere? Can you memoize it?"
            ],
            "id": "8.14",
            "question": " Boolean Evaluation: Given a boolean expression consisting of the symbols 0 (false), 1 (true), & (AND), I (OR), and /\\ (XOR), and a desired boolean result value result, implement a function to count the number of ways of parenthesizing the expression such that it evaluates to result. EXAMPLE countEval(\"l /\\ 01011\", false) -> 2 countEval(\"0&0&0&1 /\\ ll0\", true) -> 10",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #385. 9.1 Think about this as a real-world application. What are the different factors you would need to consider?",
                " #396. 9.1 There's no one right answer here. Discuss several different technical implementations."
            ],
            "id": "9.1",
            "question": " Stock Data: Imagine you are building some sort of service that will be called by up to 1,000 client applications to get simple end-of-day stock price information (open, close, high, low). You may assume that you already have the data, and you can store it in any format you wish. How would you design the client-facing service that provides the information to client applications?You are respon\u00ad sible for the development, rollout, and ongoing monitoring and maintenance of the feed. Describe the different methods you considered and why you would recommend your approach. Your service can use any technologies you wish, and can distribute the information to the client applications in any mechanism you choose.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #270. 9.2 To find the connection between two nodes, would it be better to do a breadth-first search or depth-first search? Why?",
                " #285. 9.2 A breadth-first search is probably better. A depth-first search can wind up going on a long path, even though the shortest path is actually very short. Is there a modification to a breadth-first search that might be even faster?",
                " #304. 9.2 Is there any way to search from both the source and destination? For what reason or in what case might this be faster?",
                " #321. 9.2 Discuss how you might implement these algorithms and this system in the real world. What sort of optimizations might you make?"
            ],
            "id": "9.2",
            "question": " Social Network: How would you design the data structures for a very large social network like Face\u00ad book or Linked In? Describe how you would design an algorithm to show the shortest path between two people (e.g., Me -> Bob -> Susan -> Jason -> You).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #334. 9.3 Think about how infinite loops might occur.",
                " #353. 9.3 How would you detect the same page? What does this mean?",
                " #365. 9.3 How do you define if two pages are the same? Is it the URLs? Is it the content? Both of these can be flawed. Why?"
            ],
            "id": "9.3",
            "question": " Web Crawler: If you were designing a web crawler, how would you avoid getting into infinite loops?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #326. 9.4 Estimate how much space is needed for this.",
                " #347. 9.4 Will you need multiple passes? Multiple machines?"
            ],
            "id": "9.4",
            "question": " You have 10 billion URLs. How do you detect the duplicate documents? In this case, assume \"duplicate\" means that the URLs are identical. Duplicate URLs: .. ... ... P9 380",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #259. 9.5 You may need to make some assumptions (in part because you don't have an inter\u00ad viewer here). That's okay. Make those assumptions explicit.",
                " #274. 9.5 Think about how you could design this for a single machine. Would you want a hash table? How would that work?",
                " #293. 9.5 Can you combine a hash table and a linked list to get the best of both worlds?",
                " #311. 9.5 How would you scale this to a larger system?"
            ],
            "id": "9.5",
            "question": " Imagine a web server for a simplified search engine. This system has 100 machines to respond to search queries, which may then call out using processSearch ( string query) to another cluster of machines to actually get the result. The machine which responds to a given query is chosen at random, so you cannot guarantee that the same machine will always respond to the same request. The method processSearch is very expensive. Design a caching mechanism for the most recent queries. Be sure to explain how you would update the cache when data changes. Cache:",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #142. 9.6 First, start with making some assumptions. What do and don't you have to build?",
                " #158. 9.6 We've assumed that the rest of the eCommerce system is already handled, and we just need to deal with the analytics part of safes rank. We can get notified somehow when a purchase occurs.",
                " #176. 9.6 Think about what sort of expectations on freshness and accuracy of data is expected. Does the data always need to be 100% up to date? Is the accuracy of some products more important than others?",
                " #189. 9.6 Purchases will occur very frequently. You probably want to limit database writes.",
                " #208. 9.6 You also want to limit joins because they can be very expensive.",
                " #223. 9.6 Don't forget that a product can be listed under multiple categories.",
                " #236. 9.6 Where would it be appropriate to cache data or queue up tasks?",
                " #244. 9.6 Depending on what assumptions you made, you might even be able to do without a database at all. What would this mean? Would it be a good idea?"
            ],
            "id": "9.6",
            "question": " A large eCommerce company wishes to list the best-selling products, overall and by category. For example, one product might be the #1056th best-selling product overall but the #13th best-selling product under \"Sports Equipment\" and the #24th best-selling product under \"Safety.\" Describe how you would design this system. Sales Rank: 385",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #180. 9.7 Observe that there is a lot of data coming in, but people probably aren't reading the data very frequently.",
                " #199. 9.7 The system will be write-heavy: Lots of data being imported, but it's rarely being read.",
                " #212. 9.7 Think about things like how you're going to get the bank data (will it be pulled or pushed?), what features the system will support, etc.",
                " #247. 9.7 Try to reduce unnecessary database queries. If you don't need to permanently store the data in the database, you might not need it in the database at all.",
                " #276. 9.7 As much work as possible should be done asynchronously."
            ],
            "id": "9.7",
            "question": " Explain how you would design a personal financial manager (like Mint.com). This system would connect to your bank accounts, analyze your spending habits, and make recommendations. Personal Financial Manager:",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #165. 9.8 Scope the problem well. What will and won't you tackle as part of this system?",
                " #184. 9.8 How evenly do you think traffic is distributed? Do all documents get roughly the same age of traffic? Or is it likely there are some very popular documents?",
                " #206. 9.8 How will you handle generating URLs?",
                " #232. 9.8 If you generate URLs randomly, do you need to worry about collisions (two documents with the same URL)? If so, how can you handle this?"
            ],
            "id": "9.8",
            "question": " Pastebin: Design a system like Pastebin, where a user can enter a piece of text and get a randomly generated URL to access it.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #332. 10.1 Try moving from the end of the array to the beginning."
            ],
            "id": "10.1",
            "question": " Sorted Merge: You are given two sorted arrays, A and B, where A has a large enough buffer at the end to hold B. Write a method to merge B into A in sorted order.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #182. 10.2 Two words are anagrams if they contain the same characters but in different orders. How can you put characters in order?",
                " #263. 10.2 Can you leverage a standard sorting algorithm?",
                " #342. 10.2 Do you even need to truly \"sort\"? Or is just reorganizing the list sufficient?"
            ],
            "id": "10.2",
            "question": " Group Anagrams: Write a method to sort an array of strings so that all the anagrams are next to each other.",
            "solution": "<pre>package Q10_02_Group_Anagrams;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\nimport CtCILibrary.AssortedMethods;\nimport CtCILibrary.HashMapList;\n\npublic class QuestionB {\n\tpublic class AnagramComparator implements Comparator<String> {\n\t\tprivate String sortChars(String s) {\n\t\t\tchar[] content = s.toCharArray();\n\t\t\tArrays.sort(content);\n\t\t\treturn new String(content);\n\t\t}\n\t\n\t    public int compare(String s1, String s2) {\n\t    \treturn sortChars(s1).compareTo(sortChars(s2));\n\t    }\n\t}\n\n\tpublic static void sort(String[] array) {\n\t\tHashMapList<String, String> mapList = new HashMapList<String, String>();\n\t\t\n\t\t/* Group words by anagram */\n\t\tfor (String s : array) {\n\t\t\tString key = sortChars(s); \n\t\t\tmapList.put(key, s);\n\t\t}\n\t\t\n\t\t/* Convert hash table to array */\n\t\tint index = 0;\n\t\tfor (String key : mapList.keySet()) {\n\t\t\tArrayList<String> list = mapList.get(key);\n\t\t\tfor (String t : list) {\n\t\t\t\tarray[index] = t;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static String sortChars(String s) {\n\t\tchar[] content = s.toCharArray();\n\t\tArrays.sort(content);\n\t\treturn new String(content);\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tString[] array = {\"apple\", \"banana\", \"carrot\", \"ele\", \"duck\", \"papel\", \"tarroc\", \"cudk\", \"eel\", \"lee\"};\n\t\tsort(array);\n\t\tSystem.out.println(AssortedMethods.stringArrayToString(array));\n\t}\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/10_2.png\" />"
        },
        {
            "hints": [
                " #298. 10.3 Can you modify binary search for this purpose?",
                " #370. 6.6 Build up from this. What if there were three blue-eyed people? What if there were four blue-eyed people?"
            ],
            "id": "10.3",
            "question": " Search in Rotated Array: Given a sorted array of n integers that has been rotated an unknown number of times, write code to find an element in the array. You may assume that the array was originally sorted in increasing order. EXAMPLE lnput:findSin{lS, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14} Output: 8 (the index of 5 in the array)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #320. 10.4 Think about how binary search works. What will be the issue with just implementing binary search?",
                " #337. 10.4 Binary search requires comparing an element to the midpoint. Getting the midpoint requires knowing the length. We don't know the length. Can we find it?",
                " #348. 10.4 We can find the length by using an exponential backoff. First check index 2, then 4, then 8, then 16, and so on. What will be the runtime of this algorithm?"
            ],
            "id": "10.4",
            "question": " pg39S Sorted Search, No Size: You are given an array-like data structure Listy which lacks a size method. It does, however, have an elementAt ( i) method that returns the element at index i in 0( 1) time. If i is beyond the bounds of the data structure, it returns -1. (For this reason, the data structure only supports positive integers.) Given a Li sty which contains sorted, positive integers, find the index at which an element x occurs. If x occurs multiple times, you may return any index.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #256. 10.5 Try modifying binary search to handle this."
            ],
            "id": "10.5",
            "question": " Sparse Search: Given a sorted array of strings that is interspersed with empty strings, write a method to find the location of a given string. EXAMPLE Input: ball,{\"at\", \"\"} Output:4 \"\" , '\"' , \"\" , \"ball\", \"\" , \"\" , \"car\", \"\" , '\"' , \"dad\", '\"' ,",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #207. 10.6 Think a bout merge sort versus quick sort. Wou Id one of them work well for this purpose?"
            ],
            "id": "10.6",
            "question": " Sort Big File: Imagine you have a 20 GB file with one string per line. Explain how you would sort the file.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #235. 10.7 Would a bit vector help?",
                " #254. 10.7 To do it with less memory, can you try multiple passes?",
                " #281. 10.7 Try using one pass to get it down to a range of values, and then a second pass to find a specific value."
            ],
            "id": "10.7",
            "question": " pg402 Missing Int: Given an input file with four billion non-negative integers, provide an algorithm to generate an integer that is not contained in the file. Assume you have 1 GB of memory available for this task. FOLLOW UP What if you have only 10 MB of memory? Assume that all the values are distinct and we now have no more than one billion non-negative integers.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #289. 10.8 Can you use a bit vector?",
                " #315. 10.8 Consider implementing your own bit vector class. It's a good exercise and an important part of this problem."
            ],
            "id": "10.8",
            "question": " Find Duplicates: You have an array with all the numbers from 1 to N, where N is at most 32,000. The array may have duplicate entries and you do not know what N is. With only 4 kilobytes of memory available, how would you print all duplicate elements in the array?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #193. 10.9 Start with a naive solution. (But hopefully not too naive. You should be able to use the fact that the matrix is sorted.)",
                " #211. 10.9 We can do a binary search in each row. How long will this take? How can we do better?",
                " #229. 10.9 If you're considering a particular column, is there a way to quickly eliminate it (in some cases at least)?",
                " #251. 10.9 Since each column is sorted, you know that the value can't be in this column if it's smaller than the min value in this column. What else does this tell you?",
                " #266. 10.9 If the value xis smaller than the start of the column, then it also can't be in any columns to the right.",
                " #279. 10.9 Think about the previous hint in the context of rows.",
                " #288. 10.9 What would happen if we tried to keep track of this using an array ? What are the pros and cons of this?",
                " #297. 5.2 Think about what happens for values that can't be represented accurately in binary.",
                " #303. 10.9 Another way to think about this is that if you drew a rectangle around a cell extending to the bottom, right coordinate of the matrix, the cell would be bigger than all the items in this square.",
                " #317. 10.9 A cell will be larger than all the items below it and to the right. It will be smaller than all cells above it and to the left. If we wanted to eliminate the most elements first, which element should we compare the value x to?",
                " #330. 10.9 If we compare x to the center element in the matrix, we can eliminate roughly one quarter of the elements in the matrix."
            ],
            "id": "10.9",
            "question": " Sorted Matrix Search: Given an M x N matrix in which each row and each column is sorted in ascending order, write a method to find an element.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #301. 10.1 O The problem with using an array is that it will be slow to insert a number. What other data structures could we use?",
                " #376. 10.1 O Would it work well to use a binary search tree?",
                " #392. 10.10 Consider a binary search tree where each node stores some additional data."
            ],
            "id": "10.10",
            "question": " Rank from Stream: Imagine you are reading in a stream of integers. Periodically, you wish to be able to look up the rank of a numberx (the number of values less than or equal to x). lmplement the data structures and algorithms to support these operations. That is, implement the method track ( int x), which is called when each number is generated, and the method getRankOfNumber(int x), which returns the number of values less than or equal to x (not including x itself). EXAMPLE Stream (in order of appearance): 5, 1, 4, 4, 5, 9, 7, 13, 3 getRankOfNumber(l) 0 getRankOfNumber(3) = 1 getRankOfNumber(4) 3",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #196. 10.11 Imagine the array were sorted in ascending order. Is there any way you could \"fix it\"to be sorted into alternating peaks and valleys?",
                " #219. 10.11 Try walking through a sorted array. Can you just swap elements until you have fixed the array?",
                " #231. 10.11 Note that if you ensure the peaks are in place, the valleys will be, too. Therefore, your iteration to fix the array can skip over every other element.",
                " #253. 10.11 Do you necessarily need the arrays to be sorted? Can you do it with an unsorted array?",
                " #277. 10.11 Suppose you had a sequence of three elements ( { 0, 1, 2}, in any order. Write out all possible sequences for those elements and how you can fix them to make 1 the peak.",
                " #292. 10.11 Revisit the set of sequences for { 0, 1, 2} that you just wrote out. Imagine there are elements before the leftmost element. Are you sure that the way you swap the elements won't invalidate the previous part of the array?",
                " #316. 10.11 You should be able to design an O(n) algorithm."
            ],
            "id": "10.11",
            "question": " Peaks and Valleys: In an array of integers, a \"peak\" is an element which is greater than or equal to the adjacent integers and a \"valley\" is an element which is less than or equal to the adjacent inte\u00ad gers. For example, in the array {5, 8, 6, 2, 3, 4, 6}, {8, 6} are peaks and {5, 2} are valleys. Given an array of integers, sort the array into an alternating sequence of peaks and valleys. EXAMPLE Input: {5, 3, 1, 2, 3} Output: {5, 1, 3, 2, 3}",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #257. 11.1 There are two mistakes in this code.",
                " #299. 11.1 What will happen to the unsigned int?",
                " #362. 11.1 Look at the parameters for printf."
            ],
            "id": "11.1",
            "question": " Mistake: Find the mistake(s) in the following code: unsigned inti; for (i = 100; i >= 0; --i) printf(\"%d\\n\", i);",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #325. 11.2 Think about issues both within the program and outside of the program (the rest of the system)."
            ],
            "id": "11.2",
            "question": " Random Crashes: You are given the source to an application which crashes when it is run. After running it ten times in a debugger, you find it never crashes in the same place. The application is single threaded, and uses only the C standard library. What programming errors could be causing this crash? How would you test each one?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #329. 11.3 Consider both extreme cases and more general cases.",
                " #401. 11.3 Is it possible to test everything? How will you prioritize testing?"
            ],
            "id": "11.3",
            "question": " ChessTest:We have the following method used in a chess game: boolean canMoveTo(int x, int y). This method is part of the Piece class and returns whether or not the piece can move to position (x, y). Explain how you would test this method.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #313. 11.4 Think about what load testing is designed to test. What are the factors in the load of a webpage? What criteria would be used to judge if a webpage performs satisfactorily under heavy load?",
                " #345. 11.4 Could you build your own? What might that look like?"
            ],
            "id": "11.4",
            "question": " No Test Tools: How would you load test a webpage without using any test tools?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #140. 11.5 What does the interviewer mean by a pen? There are a lot of different types of pens. Make a list of potential questions you would want to ask.",
                " #164. 11.5 Consider the scenario of a pen for children. What does this mean? What are the different use cases?",
                " #220. 11.5 Have you considered both intended uses (writing, etc.) and unintended use? What about safety? You would not want a pen for children to be dangerous."
            ],
            "id": "11.5",
            "question": " Test a Pen: How would you test a pen?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #210. 11.6 Be careful about your assumptions. Who are the users? Where are they using this? It might seem obvious, but the real answer might be different.",
                " #225. 11.6 In a real interview, you would also want to discuss what sorts of test tools we have avail\u00ad able.",
                " #268. 11.6 What are the different features and uses we would want to test?",
                " #349. 11.6 What can we automate?",
                " #393. 11.6 Have you thought about security and reliability?"
            ],
            "id": "11.6",
            "question": " Test an ATM: How would you test an ATM in a distributed banking system?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #449. 12.1 If we already had the number of lines in the file, how would we do this?",
                " #459. 12.1 Suppose we didn't have the number of lines in the file. Is there a way we could do this without first counting the number of lines?"
            ],
            "id": "12.1",
            "question": " Last K Lines: Write a method to print the last Klines of an input file using C++. pg422",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #452. 12.2 Be careful about the null character."
            ],
            "id": "12.2",
            "question": " Reverse String: Implement a function void reverse( char* str) in C or C++ which reverses a null-terminated string. ................. .................... ... .................................................................... ..... . ....... 1)9 423",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #423. 12.3 What is the underlying data structure behind each? What are the implications of this?"
            ],
            "id": "12.3",
            "question": " Hash Table vs. STL Map: Compare and contrast a hash table and an STL map. How is a hash table implemented? If the number of inputs is small, which data structure options can be used instead of a hash table?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #463. 12.4 You should discuss vtables here."
            ],
            "id": "12.4",
            "question": " Virtual Functions: How do virtual functions work in C++?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #445. 12.5 A shallow copy copies just the initial data structure. A deep copy does this, and also copies any underlying data. Given this, why might you use one versus the other?"
            ],
            "id": "12.5",
            "question": " Shallow vs. Deep Copy: What is the difference between deep copy and shallow copy? Explain how you would use each.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #456. 12.6 The keyword volatile signals that a variable might be changed from outside of the program, such as by another process. Why might this be necessary?"
            ],
            "id": "12.6",
            "question": " Volatile: What is the significance of the keyword \"volatile\" in C?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #460. 12.7 What would happen if the destructor were not virtual?"
            ],
            "id": "12.7",
            "question": " Virtual Base Class: Why does a destructor in base class need to be declared virtual? \u00b7\u00b7--\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7--\u00b7\u00b7\u00b7\u00b7\u00b7------- --\u00b7--- .......... --P9 427",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #427. 12.8 This data structure can be pictured as a binary tree, but it's not necessarily. What if there's a loop in the structure?",
                " #462. 12.8 Consider using a hash table."
            ],
            "id": "12.8",
            "question": " Copy Node: Write a method that takes a pointer to a Node structure as a parameter and returns a complete copy of the passed in data structure. The Node data structure contains two pointers to other Nodes.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #402. 12.9 Focus on the concept firsts, then worry about the exact implementation. How should SmartPointer look?",
                " #438. 12.9 Think about tracking the number of references. What will this tell us?",
                " #453. 12.9 What are all the different methods/operators we might want to override?"
            ],
            "id": "12.9",
            "question": " Smart Pointer: Write a smart pointer class. A smart pointer is a data type, usually implemented with templates, that simulates a pointer while also providing automatic garbage collection. It automati\u00ad cally counts the number of references to a SmartPointer<T*> object and frees the object of type T when the reference count hits zero.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #432. 12.10 Imagine we have a sequential set of integers (3, 4, 5, ... ). How big does this set need to be to ensure that one of the numbers is divisible by 16?",
                " #440. 12.10 How will we free the memory?"
            ],
            "id": "12.10",
            "question": " Malloc: Write an aligned malloc and free function that supports allocating memory such that the memory address returned is divisible by a specific power of two. EXAMPLE align_malloc (1000, 128) will return a memory address that is a multiple of 128 and that points to memory of size 1000 bytes. aligned_ free () will free memory allocated by align_malloc.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #406. 12.11 Recall that a two dimensional array is essentially an array of arrays.",
                " #426. 12.11 Can we allocate this instead as a contiguous block of memory?"
            ],
            "id": "12.11",
            "question": " 20 Alloc: Write a function in C called my2DA1loc which allocates a two-dimensional array. Mini\u00ad mize the number of calls to malloc and make sure that the memory is accessible by the notation arr[i][j ].",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #404. 13.1 Think about who can access private methods."
            ],
            "id": "13.1",
            "question": " Private Constructor: In terms of inheritance, what is the effect of keeping a constructor private?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #409. 13.2 When does a finally block get executed? Are there any cases where it won't get executed?"
            ],
            "id": "13.2",
            "question": " Return from Finally: In Java, does the finally block get executed if we insert a return state\u00ad ment inside the try block of a try-catch-finally?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #412. 13.3 Consider that some of these might have different meanings depending on where they are applied."
            ],
            "id": "13.3",
            "question": " Final, etc.: What is the difference between final, finally, and finalize?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #416. 13.4 The purpose of these might be somewhat similar, but how does the implementation differ?",
                " #425. 13.4 Consider the usage of primitive types. How else might they differ in terms of how you can use the types?"
            ],
            "id": "13.4",
            "question": " pg 433 Generics vs. Templates: Explain the difference between templates in C ++ and generics in Java.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #420. 13.5 Think about the underlying data structure.",
                " #424. 13.5 HashMap uses an array of linked lists. TreeMap uses a red-black tree. LinkedHashMap uses doubly-linked buckets. What is the implication of this?",
                " #430. 13.5 Consider how they might differ in terms of the order of iteration through the keys. Why might you want one option instead of the others?",
                " #454. 13.5 What would the runtime of the common operations be?"
            ],
            "id": "13.5",
            "question": " TreeMap, HashMap, LinkedHashMap: Explain the differences between TreeMap, HashMap, and LinkedHashMap. Provide an example of when each one would be best.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #435. 13.6 Object reflection allows you to get information about methods and fields in an object. Why might this be useful?"
            ],
            "id": "13.6",
            "question": " Object Reflection: Explain what object reflection is in Java and why it is useful.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #448. 13.7 Consider how you'd implement this first without lambda expressions.",
                " #464. 13.7 Can you do this without a filter operation?"
            ],
            "id": "13.7",
            "question": " Lambda Expressions: There is a class Country that has methods getContinent() and getPopulation(). Write a function int getPopulation(List<Country> countries, String continent) that computes the total population of a given continent, given a list of all countries and the name of a continent.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #443. 13.8 A naive approach is to pick a random subset size z and then iterate through the elements, putting it in the set with probability z/list_size. Why would this not work?",
                " #450. 13.8 Pick the list of all the subsets of an n-element set. For any given item x, half of the subsets contain x and half do not.",
                " #457. 13.8 Do not pick the length of the subset in advance. You don't need to. Instead, think about this as picking whether each element will be put into the set."
            ],
            "id": "13.8",
            "question": " pg433 Lambda Random: Using Lambda expressions, write a function List<Integer> getRandomSubset ( List< Integer> list) that returns a random subset of arbitrary size. All subsets (including the empty set) should be equally likely to be chosen.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #408. 14.1 A GROUP BY clause might be useful."
            ],
            "id": "14.1",
            "question": " Multiple Apartments: Write a SOL query to get a list of tenants who are renting more than one apartment.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #411. 14.2 It might be helpful to break the approach into two pieces. The first piece is to get each building ID and the number of open requests. Then, we can get the building names."
            ],
            "id": "14.2",
            "question": " Open Requests: Write a SQL query to get a list of all buildings and the number of open requests (Requests in which status equals 'Open'). pg 44.2",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #431. 14.3 First try to get a list of the IDs (just the IDs) of all the relevant apartments."
            ],
            "id": "14.3",
            "question": " Close All Requests: Building #11 is undergoing a major renovation. Implement a query to close all requests from apartments in this building. pg442",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #451. 14.4 Describe INNER JOINs and OUTER JOINs. OUTER JOINs can have multiple types: left, right, and full."
            ],
            "id": "14.4",
            "question": " Joins: What are the different types of joins? Please explain how they differ and why certain types are better in certain situations.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #444. 14.5 Denormalization means adding redundant data to a table. It's typically used in very large systems. Why might this be useful?",
                " #455. 14.5 Think about the cost of joins on a large system."
            ],
            "id": "14.5",
            "question": " Denormalization: What is denormalization? Explain the pros and cons.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #436. 14.6 Be particularly careful about which relationships are one-to-one vs. one-to-many vs. many-to-many."
            ],
            "id": "14.6",
            "question": " Entity-Relationship Diagram: Draw an entity-relationship diagram for a database with companies, people, and professionals (people who work for companies).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #428. 14.7 You probably need a list of students, their courses, and another table building a relation\u00ad ship between students and courses. Note that this is a many-to-many relationship.",
                " #442. 14.7 Think carefully about how you handle ties when selecting the top 10%."
            ],
            "id": "14.7",
            "question": " pg444 Design Grade Database: Imagine a simple database storing information for students' grades. Design what this database might look like and provide a SQL query to return a list of the honor roll students (top 10%), sorted by their grade point average.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #405. 15.1 How do these differ in terms of memory?"
            ],
            "id": "15.1",
            "question": " Thread vs. Process: What's the difference between a thread and a process?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/15_1.png\" />"
        },
        {
            "hints": [
                " #403. 15.2 A context switch is the time spent switching between two processes. This happens when you bring one process into execution and swap out the existing process.",
                " #407. 15.2 Ideally, we would like to record the timestamp when one process \"stops\" and the time\u00ad stamp when another process \"starts:' But how do we know when this swapping will occur?",
                " #447. 15.7 Outline the structure for the threads without worrying about synchronizing anything."
            ],
            "id": "15.2",
            "question": " Context Switch: How would you measure the time spent in a context switch?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #419. 15.3 A deadlock can happen when there's a \"cycle\" in the order of who is waiting for whom. How can we break or prevent this cycle?",
                " #437. 15.3 One idea is to just not let a philosopher hold onto a chopstick if he can't get the other one."
            ],
            "id": "15.3",
            "question": " Dining Philosophers: In the famous dining philosophers problem, a bunch of philosophers are sitting around a circular table with one chopstick between each of them. A philosopher needs both chopsticks to eat, and always picks up the left chopstick before the right one. A deadlock could potentially occur if all the philosophers reached for the left chopstick at the same time. Using threads and locks, implement a simulation of the dining philosophers problem that prevents dead\u00ad locks.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #422. 15.4 If every thread had to declare upfront what processes it might need, could we detect possible deadlocks in advance?",
                " #434. 15.4 Think about the order of requests as a graph. What does a deadlock look like within this graph?"
            ],
            "id": "15.4",
            "question": " Deadlock-Free Class: Design a class which provides a lock only if there are no possible deadlocks.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #433. 15.5 Why would using boolean flags to do this be a bad idea?",
                " #446. 15.5 Would semaphores be useful here?"
            ],
            "id": "15.5",
            "question": " Call In Order: Suppose we have the following code: public class Foo { public Foo() { ... } public void first() { ... } public void second() { ... } public void third() { ... } } The same instance of F oo will be passed to three different threads. ThreadA will call first, threads will call second, and thread( will call third. Design a mechanism to ensure that first is called before second and second is called before third.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #429. 15.6 The keyword synchronized ensures that two threads cannot execute synchronized methods on the same instance at the same time."
            ],
            "id": "15.6",
            "question": " Synchronized Methods: You are given a class with synchronized method A and a normal method B. If you have two threads in one instance of a program, can they both execute A at the same time? Can they execute A and B at the same time?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #439. 15.7 Don't try to do anything fancy on the single-threaded problem. Just get something that is simple and easily readable.",
                " #447. 15.7 Outline the structure for the threads without worrying about synchronizing anything.",
                " #458. 15.7 Once you get the structure of each thread done, think about what you need to synchro\u00ad nize."
            ],
            "id": "15.7",
            "question": " In the classic problem FizzBuzz, you are told to print the numbers from 1 to n. However, when the number is divisible by 3, print \"Fizz''. When it is divisible by 5, print \"Buzz''. When it is divis\u00ad ible by 3 and 5, print \"FizzBuzz''. In this problem, you are asked to do this in a multithreaded way. Implement a multithreaded version of FizzBuzz with four threads. One thread checks for divisibility of 3 and prints \"Fizz''. Another thread is responsible for divisibility of 5 and prints\"Buzz''. A third thread is responsible for divisibility of 3 and 5 and prints \"FizzBuzz''. A fourth thread does the numbers. FizzBuzz:",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #492. 16.1 Try picturing the two numbers, a and b, on a number line.",
                " #716. 16.1 Let di ff be the difference between a and b.Can you use diff in some way?Then can you get rid of this temporary variable?",
                " #737. 16.1 You could also try using XOR."
            ],
            "id": "16.1",
            "question": " Number Swapper: Write a function to swap a number in place (that is, without temporary vari\u00ad ables).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #489. 16.2 Think about what the best conceivable runtime is for this problem. If your solution matches the best conceivable runtime, then you probably can't do any better.",
                " #536. 16.2 Can you use a hash table to optimize the repeated case?"
            ],
            "id": "16.2",
            "question": " Word Frequencies: Design a method to find the frequency of occurrences of any given word in a book. What if we were running this algorithm multiple times?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #465. 16.3 Think about what you're going to design for.",
                " #472. 16.3 Will all lines intercept? What determines if two lines intercept?",
                " #497. 16.3 Infinite lines will almost always intersect-unless they're parallel. Parallel lines might still \"intercept\"-if they're the same lines. What does this mean for line segments?",
                " #517. 16.3 How can we find the intersection between two lines? If two line segments intercept, then this must be at the same point as their \"infinite\" extensions. Is this intersection point within both lines?",
                " #527. 16.3 Think carefully about how to handle the case of line segments that have the same slope and y-intercept."
            ],
            "id": "16.3",
            "question": " Intersection: Given two straight line segments (represented as a start point and an end point), compute the point of intersection, if any.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #710. 16.4 If you were calling hasWon multiple times, how might your solution change?",
                " #732. 16.4 If you were designing this for an NxN board, how might your solution change?"
            ],
            "id": "16.4",
            "question": " Tic Tac Win: Design an algorithm to figure out if someone has won a game of tic-tac-toe.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #585. 16.5 How does a zero get into the result of n l? What does it mean?",
                " #711. 16.5 Each zero in n! corresponds to n being divisible by a factor of 10. What does that mean?",
                " #729. 16.5 Each factor of 1 O in n ! means n ! is divisible by 5 and 2.",
                " #733. 16.5 Can you count the number of factors of 5 and 2? Do you need to count both?",
                " #745. 16.5 Have you considered that 25 actually accounts for two factors of 5?"
            ],
            "id": "16.5",
            "question": " Factorial Zeros: Write an algorithm which computes the number of trailing zeros in n factorial.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #632. 16.6 What if you sorted the arrays?",
                " #670. 16.6 Think about how you would merge two sorted arrays.",
                " #679. 16.6 Imagine you had the two arrays sorted and you were walking through them. If the pointer in the first array points to 3 and the pointer in the second array points to 9, what effect will moving the second pointer have on the difference of the pair?"
            ],
            "id": "16.6",
            "question": " Smallest Difference: Given two arrays of integers, compute the pair of values (one value in each array) with the smallest (non-negative) difference. Return the difference. EXAMPLE Input: {1, 3, 15, 11, 2}, {23, 127,235, 19, 8} Output: 3. That is, the pair (11, 8).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #473. 16.7 Let k be 1 if a > b and O otherwise. If you were given k, could you return the max (without a comparison or if-else logic)?",
                " #513. 16.7 lfk werelwhena > bandOotherwise,then you could returna*k + b*(not k). But how do you create k?",
                " #707. 16.7 When a > b, then a - b > 0. Can you get the sign bit of a - b?",
                " #728. 16.7 Have you considered how to handle integer overflow in a - b?"
            ],
            "id": "16.7",
            "question": " Number Max: Write a method that finds the maximum of two numbers. You should not use if-else or any other comparison operator.",
            "solution": "<pre>package Q16_07_Number_Max;\n\npublic class Question {\n\t/* Flips a 1 to a 0 and a 0 to a 1 */\n\tpublic static int flip(int bit) {\n\t\treturn 1 ^ bit;\n\t}\t\n\t\n\t/* Returns 1 if a is positive, and 0 if a is negative */\n\tpublic static int sign(int a) {\n\t\treturn flip((a >> 31) & 0x1);\n\t}\n\t\n\tpublic static int getMaxNaive(int a, int b) {\n\t\tint k = sign(a - b);\n\t\tint q = flip(k);\n\t\treturn a * k + b * q;\n\t}\n\t\n\tpublic static int getMax(int a, int b) {\n\t\tint c = a - b;\n\t\t\n\t\tint sa = sign(a); // if a >= 0, then 1 else 0\n\t\tint sb = sign(b); // if b >= 0, then 1 else 0\n\t\tint sc = sign(c); // depends on whether or not a - b overflows\n\t\t\n\t\t/* We want to define a value k which is 1 if a > b and 0 if a < b. \n\t\t * (if a = b, it doesn't matter what value k is) */\n\t\t\n\t\tint use_sign_of_a = sa ^ sb; // If a and b have different signs, then k = sign(a)\n\t\tint use_sign_of_c = flip(sa ^ sb); // If a and b have the same sign, then k = sign(a - b)\n\t\t\n\t\t/* We can't use a comparison operator, but we can multiply values by 1 or 0 */\n\t\tint k = use_sign_of_a * sa + use_sign_of_c * sc;\n\t\tint q = flip(k); // opposite of k\n\t\t\n\t\treturn a * k + b * q;\n\t}\t\n\t\n\tpublic static void main(String[] args) {\n\t\tint a = 26;\n\t\tint b = -15;\n\t\t\n\t\tSystem.out.println(\"max_naive(\" + a + \", \" + b + \") = \" + getMaxNaive(a, b));\n\t\tSystem.out.println(\"max(\" + a + \", \" + b + \") = \" + getMax(a, b));\t\t\n\t\t\n\t\ta = -15;\n\t\tb = 2147483647;\n\t\t\n\t\tSystem.out.println(\"max_naive(\" + a + \", \" + b + \") = \" + getMaxNaive(a, b));\n\t\tSystem.out.println(\"max(\" + a + \", \" + b + \") = \" + getMax(a, b));\n\t}\n\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/16_7.png\" />"
        },
        {
            "hints": [
                " #502. 16.8 Try thinking about the number in terms of chunks of three digits.",
                " #588. 16.8 Have you considered negative numbers? Does your solution work for values like 100,030,000?",
                " #688. 16.8 Consider dividing up a number into sequences of three digits."
            ],
            "id": "16.8",
            "question": " English Int: Given any integer, print an English phrase that describes the integer (e.g., \"One Thou\u00ad sand, Two Hundred Thirty Four\").",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #572. 16.9 Approach these one by one, starting with subtraction. Once you've completed one function, you can use it to implement the others.",
                " #600. 16.9 Subtraction: Would a negate function (which converts a positive integer to negative) help? Can you implement this using the add operator?",
                " #613. 16.9 Multiply: it's easy enough to implement multiply using add. But how do you handle negative numbers?",
                " #648. 16.9 Divide: If you're trying to compute, where X = \ufffd, remember that a = bx. Can you find the closest value for x? Remember that this is integer division and x should be an integer."
            ],
            "id": "16.9",
            "question": " Operations: Write methods to implement the multiply, subtract, and divide operations for integers. The results of all of these are integers. Use only the add operator.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #476. 16.1 O Solution 1: Can you count the number of people alive in each year?",
                " #490. 16.10 Solution 1: Try using a hash table, or an array that maps from a birth year to how many people are alive in that year.",
                " #507. 16.10 Solution 2: What if you sorted the years? What would you sort by?",
                " #514. 16.1 O Solution 2: Do you actually need to match the birth years and death years? Does it matter when a specific person died, or do you just need a list of the years of deaths?",
                " #532. 16.1 O Solution 2: Try creating a sorted list of births and a sorted list of deaths. Can you iterate through both, tracking the number of people alive at any one time?",
                " #541. 16.10 Solution 3: Each birth adds one person and each death removes a person. Try writing an example of a list of people (with birth and death years) and then re-formatting this into a list of each year and a + 1 for a birth and a -1 for a death.",
                " #549. 16.10 Solution 3: What if you created an array of years and how the population changed in each year? Could you then find the year with the highest population?",
                " #576. 16.10 Solution 3: Be careful with the little details in this problem. Does your algorithm/code handle a person who dies in the same year that they are born? This person should be counted as one person in the population count."
            ],
            "id": "16.10",
            "question": " Living People: Given a list of people with their birth and death years, implement a method to compute the year with the most number of people alive. You may assume that all people were born between 1900 and 2000 (inclusive). If a person was alive during any portion of that year, they should be included in that year's count. For example, Person (birth= 1908, death= 1909) is included in the counts for both 1908 and 1909.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #690. 16.11 Consider building a diving board. What are the choices you make?",
                " #700. 16.11 Consider a recursive solution.",
                " #715. 16.11 Once you have a recursive algorithm, think about the runtime. Can you make this faster? How?",
                " #722. 16.11 Consider memoization to optimize the runtime. Think carefully about what exactly you cache. What is the runtime? The runtime is closely related to the max size of the table.",
                " #740. 16.11 There's an alternate, clever (and very fast) solution. You can actually do this in linear time without recursion. How?",
                " #747. 16.11 Think about it this way. You are picking K planks and there are two different types. All choices with 10 of the first type and 4 of the second type will have the same sum. Can you just iterate through all possible choices?"
            ],
            "id": "16.11",
            "question": " Diving Board: You are building a diving board by placing a bunch of planks of wood end-to-end. There are two types of planks, one of length shorter and one of length longer. You must use exactly K planks of wood. Write a method to generate all possible lengths for the diving board.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #466. 16.12 Consider a recursive or tree-like approach."
            ],
            "id": "16.12",
            "question": " XML Encoding: Since XML is very verbose, you are given a way of encoding it where each tag gets mapped to a pre-defined integer value. The language/grammar is as follows: Element Attribute END Tag Value --> --> --> --> --> Tag Attributes END Children END Tag Value 0 some predefined mapping to int string value For example, the following XML might be converted into the compressed string below (assuming a mapping of family -> 1, person ->2, firstName -> 3, lastName -> 4, state -> 5). <family lastName=\"McDowell\" state=\"CA\"> <person firstName=\"Gayle\">Some Message</person> </family> Becomes: 1 4 McDowell SCA 0 2 3 Gayle 0 Some Message 0 0 Write code to print the encoded version of an XML element (passed in Element and Attribute objects).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #468. 16.13 Draw a square and a bunch of lines that cut it in half. Where are those lines located?",
                " #479. 16.13 Any straight line that cuts a square in half goes through the center of the square. How then can you find a line that cuts two squares in half?",
                " #528. 16.13 To cut two squares in half, a line must go through the middle of both squares.",
                " #560. 16.13 Given a line (slope and y-intercept), can you find where it intersects another line?"
            ],
            "id": "16.13",
            "question": " Bisect Squares: Given two squares on a two-dimensional plane, find a line that would cut these two squares in half. Assume that the top and the bottom sides of the square run parallel to the x-axis.",
            "solution": "<pre>package Q16_13_Bisect_Squares;\n\npublic class Square {\n\tpublic double left;\n\tpublic double top;\n\tpublic double bottom;\n\tpublic double right;\n\tpublic double size;\n\tpublic Square(double left, double top, double size) {\n\t\tthis.left = left;\n\t\tthis.top = top;\n\t\tthis.bottom = top + size;\n\t\tthis.right = left + size;\n\t\tthis.size = size;\n\t}\n\t\n\tpublic Point middle() {\n\t\treturn new Point((this.left + this.right)/2.0, (this.top + this.bottom)/2.0);\n\t}\n\t\n\tpublic boolean contains(Square other) {\n\t\tif (this.left <= other.left && this.right >= other.right && this.top <= other.top && this.bottom >= other.bottom) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t/* Return the point where the line segment connecting mid1 and\n\t * mid2 intercepts the edge of square 1. That is, draw a line \n\t * from mid2 to mid1, and continue it out until the edge of\n\t * the square. */\n\tpublic Point extend(Point mid1, Point mid2, double size) {\n\t\t/* Find what direction the line mid2 -> mid1 goes */\n\t\tdouble xdir = mid1.x < mid2.x ? -1 : 1;\n\t\tdouble ydir = mid1.y < mid2.y ? -1 : 1;\n\t\t\n\t\t/* If mid1 and mid2 have the same x value, then the slope\n\t\t * calculation will throw a divide by 0 exception. So, we\n\t\t * compute this specially. */\n\t\tif (mid1.x == mid2.x) {\n\t\t\treturn new Point(mid1.x, mid1.y + ydir * size / 2.0);\n\t\t}\n\t\tdouble slope = (mid1.y - mid2.y) / (mid1.x - mid2.x);\n\t\tdouble x1 = 0;\n\t\tdouble y1 = 0;\n\t\t\n\t\t/* Calculate slope using the equation (y1 - y2) / (x1 - x2).\n\t\t * Note: if the slope is �steep� (>1) then the end of the\n\t\t * line segment will hit size / 2 units away from the middle\n\t\t * on the y axis. If the slope is �shallow� (<1) the end of\n\t\t * the line segment will hit size / 2 units away from the\n\t\t * middle on the x axis. */\n\t\tif (Math.abs(slope) == 1) {\n\t\t\tx1 = mid1.x + xdir * size / 2.0;\n\t\t\ty1 = mid1.y + ydir * size / 2.0;\n\t\t} else if (Math.abs(slope) < 1) {\n\t\t\tx1 = mid1.x + xdir * size / 2.0;\n\t\t\ty1 = slope * (x1 - mid1.x) + mid1.y; \n\t\t} else {\n\t\t\ty1 = mid1.y + ydir * size / 2.0;\n\t\t\tx1 = (y1 - mid1.y) / slope + mid1.x;\n\t\t}\n\t\treturn new Point(x1, y1);\n\t}\n\t\n\tpublic Line cut(Square other) {\n\t\t/* Calculate where a line between each middle would collide with the edges of the squares */\n\t\tPoint p1 = extend(this.middle(), other.middle(), this.size);\n\t\tPoint p2 = extend(this.middle(), other.middle(), -1 * this.size);\n\t\tPoint p3 = extend(other.middle(), this.middle(), other.size);\n\t\tPoint p4 = extend(other.middle(), this.middle(), -1 * other.size);\n\t\n\t\t/* Of above points, find start and end of lines. Start is farthest left (with top most as a tie breaker)\n\t\t * and end is farthest right (with bottom most as a tie breaker */\n\t\tPoint start = p1;\n\t\tPoint end = p1;\t\t\n\t\tPoint[] points = {p2, p3, p4};\n\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\tif (points[i].x < start.x || (points[i].x == start.x && points[i].y < start.y)) {\n\t\t\t\tstart = points[i];\n\t\t\t} else if (points[i].x > end.x || (points[i].x == end.x && points[i].y > end.y)) {\n\t\t\t\tend = points[i];\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn new Line(start, end);\n\t}\n\t\n\tpublic String toString() {\n\t\treturn \"(\" + left + \", \" + top + \")|(\" + right + \",\" + bottom + \")\";\n\t}\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/16_13.png\" />"
        },
        {
            "hints": [
                " #491. 16.14 Sometimes, a brute force is a pretty good solution. Can you try all possible lines?",
                " #520. 16.14 You can't truly try all possible lines in the world-that's infinite. But you know that a \"best\" line must intersect at least two points. Can you connect each pair of points? Can you check if each line is indeed the best line?",
                " #529. 16.14 You should be able to get to an O(N 2 ) solution.",
                " #563. 16.14 Have you tried using a hash table?"
            ],
            "id": "16.14",
            "question": " Best Line: Given a two-dimensional graph with points on it, find a line which passes the most number of points.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #639. 16.15 Try first creating an array with the frequency that each item occurs.",
                " #730. 16.15 For ease and clarity in implementation, you might want to use other methods and classes."
            ],
            "id": "16.15",
            "question": " Master Mind: The Game of Master Mind is played as follows: The computer has four slots, and each slot will contain a ball that is red (R). yellow (Y). green (G) or blue (B). For example, the computer might have RGGB (Slot #1 is red, Slots #2 and #3 are green, Slot #4 is blue). You, the user, are trying to guess the solution. You might, for example, guess YRGB. When you guess the correct color for the correct slot, you get a \"hit:' If you guess a color that exists but is in the wrong slot, you get a \"pseudo-hit:' Note that a slot that is a hit can never count as a pseudo-hit. For example, if the actual solution is RGBY and you guess GGRR, you have one hit and one pseudo-hit. Write a method that, given a guess and a solution, returns the number of hits and pseudo-hits.",
            "solution": "<pre>package Q16_15_Master_Mind;\n\nimport java.util.Random;\n\npublic class Question {\n\n\tpublic static class Result {\n\t\tpublic int hits;\n\t\tpublic int pseudoHits;\n\t\t\n\t\tpublic Result(int h, int p) {\n\t\t\thits = h;\n\t\t\tpseudoHits = p;\n\t\t}\n\t\t\n\t\tpublic Result() {\n\t\t}\n\t\t\n\t\tpublic String toString() {\n\t\t\treturn \"(\" + hits + \", \" + pseudoHits + \")\";\n\t\t}\n\t};\n\t\n\tpublic static int code(char c) {\n\t\tswitch (c) {\n\t\tcase 'B':\n\t\t\treturn 0;\n\t\tcase 'G':\n\t\t\treturn 1;\n\t\tcase 'R':\n\t\t\treturn 2;\n\t\tcase 'Y':\n\t\t\treturn 3;\n\t\tdefault:\n\t\t\treturn -1;\n\t\t}\n\t}\n\t\n\tpublic static int MAX_COLORS = 4;\n\t\n\tpublic static Result estimate(String guess, String solution) {\n\t\tif (guess.length() != solution.length()) return null;\n\t\tResult res = new Result();\n\t\tint[] frequencies = new int[MAX_COLORS];\n\t\t    \n\t\t/* Compute hits and built frequency table */\n\t\tfor (int i = 0; i < guess.length(); i++) {\n\t\t\tif (guess.charAt(i) == solution.charAt(i)) {\n\t\t\t\tres.hits++;\n\t\t\t} else {\n\t\t\t\t/* Only increment the frequency table (which will be used for pseudo-hits) if\n\t\t\t\t * it's not a hit. If it's a hit, the slot has already been \"used.\" */\n\t\t\t\tint code = code(solution.charAt(i));\n\t\t\t\tif (code >= 0) {\n\t\t\t\t\tfrequencies[code]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Compute pseudo-hits */\n\t\tfor (int i = 0; i < guess.length(); i++) {\n\t\t\tint code = code(guess.charAt(i));\n\t\t\tif (code >= 0 && frequencies[code] > 0 && guess.charAt(i) != solution.charAt(i)) {\n\t\t\t\tres.pseudoHits++;\n\t\t\t\tfrequencies[code]--;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/16_15.png\" />"
        },
        {
            "hints": [
                " #482. 16.16 Would it help to know the longest sorted sequences at the beginning and end?",
                " #553. 16.16 We can think about the array as divided into three subarrays: LEFT, MIDDLE, RIGHT. LEFT and RIGHT are both sorted. The MIDDLE elements are in an arbitrary order. We need to expand MIDDLE until we could sort those elements and then have the entire array sorted.",
                " #667. 16.16 Consider the three subarrays: LEFT, MIDDLE, RIGHT. Focus on just this question: Can you sort middle such that the entire array becomes sorted? How would you check this?",
                " #708. 16.16 In order to be able to sort MIDDLE and have the whole array become sorted, you need MAX(LEFT) <= MIN(MIDDLE and RIGHT) and MAX(LEFT and MIDDLE) <= MIN (RIGHT).",
                " #735. 16.16 Can you expand the middle until the earlier condition is met?",
                " #746. 16.16 You should be able to solve this in O(N) time."
            ],
            "id": "16.16",
            "question": " Sub Sort: Given an array of integers, write a method to find indices m and n such that if you sorted elements m through n, the entire array would be sorted. Minimize n - m (that is, find the smallest such sequence). EXAMPLE lnput:1, 2, 4, 7, 10, 11, 7, 12, 6, 7, 16, 18, 19 Output: (3, 9) You are given an array of integers (both positive and negative). Find the contiguous sequence with the largest sum. Return the sum. EXAMPLE",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #537. 17.7 An easier way of taking the above approach is to have each name map to a list of alter\u00ad nate spellings. What should happen when a name in one group is set equal to a name in another group?",
                " #551. 16.17 Observe that if you have a sequence of values which have a negative sum, those will never start or end a sequence. (They could be present in a sequence if they connected two other sequences.)",
                " #567. 16.17 Start from the beginning of the array. As that subsequence gets larger, it stays as the best subsequence. Once it becomes negative, though, it's useless.",
                " #594. 16.17 If we tracked the running sum, we should reset it as soon as the subsequence becomes negative. We would never add a negative sequence to the beginning or end of another subsequence.",
                " #614. 16.17 You can solve this in O(N) time and 0( 1) space."
            ],
            "id": "16.17",
            "question": " Contiguous Sequence: lnput:2, -8, 3, -2, 4, -10 Output: 5 ( i. e \u2022 , { 3, -2, 4})",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #631. 16.18 Start with a brute force approach. Can you try all possibilities for a and b?",
                " #643. 16.18 Observe that one of the substrings, either a or b, must start at the beginning of the string. That cuts down the number of possibilities.",
                " #653. 16.18 Don't forget to handle the possibility that the first character in the pattern is b.",
                " #663. 16.18 Be careful with how you analyze the runtime. If you iterate through 0( n 2 ) substrings and each one does an 0( n) string comparison, then the total runtime is O( n 3 ).",
                " #685. 16.18 Suppose you decide on a specific value for the \"a\" part of a pattern. How many possibili\u00ad ties are there for b?",
                " #718. 16.18 Since the value of a determines the value of b (and vice versa) and either a or b must start at the beginning of the value, you should have only 0( n) possibilities for how to split up the pattern.",
                " #727. 16.18 You should be able to have an O(n 2 ) algorithm."
            ],
            "id": "16.18",
            "question": " Pattern Matching: You are given two strings, pattern and value. The pattern string consists of just the letters a and b, describing a pattern within a string. For example, the string catcatgocatgo matches the pattern aabab (where cat is a and go is b). It also matches patterns like a, ab, and b. Write a method to determine if value matches pattern.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #674. 16.19 If you were given the row and column of a water cell, how can you find all connected spaces?",
                " #687. 16.19 Try recursion to count the number of water cells.",
                " #706. 16.19 How can you make sure that you're not revisiting the same cells? Think about how breadth-first search or depth-first search on a graph works.",
                " #723. 16.19 You should have an algorithm that's O ( N 2 ) on an NxN matrix. If your algorithm isn't, consider if you've miscomputed the runtime or if your algorithm is suboptimal."
            ],
            "id": "16.19",
            "question": " Pond Sizes: You have an integer matrix representing a plot of land, where the value at that loca\u00ad tion represents the height above sea level. A value of zero indicates water. A pond is a region of water connected vertically, horizontally, or diagonally. The size of the pond is the total number of connected water cells. Write a method to compute the sizes of all ponds in the matrix. EXAMPLE Input: [IMG MISSING!] Output: 2, 4, 1 (in any order)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #477. 17.25 Start by grouping the dictionary by the word lengths, since you know each column has to be the same length and each row has to be the same length.",
                " #487. 16.20 Can you recursively try all possibilities?",
                " #654. 16.20 In the real world, we should know that some prefixes/substrings won't work. For example, consider the number 33835676368. Although 3383 does correspond to fftf, there are no words that start with fftf. Is there a way we can short-circuit in cases like this?",
                " #703. 16.20 A trie might help us short-circuit. What if you stored the whole list of words in the trie?",
                " #726. 16.20 We're probably going to run this algorithm many times. If we did more preprocessing, is there a way we could optimize this?",
                " #744. 16.20 With preprocessing, we can actually get the lookup time down to O( 1)."
            ],
            "id": "16.20",
            "question": " T9: On old cell phones, users typed on a numeric keypad and the phone would provide a list of words that matched these numbers. Each digit mapped to a set of O - 4 letters. Implement an algo\u00ad rithm to return a list of matching words, given a sequence of digits. You are provided a list of valid words (provided in whatever data structure you'd like). The mapping is shown in the diagram below: [IMG MISSING!] EXAMPLE Input: 8733 Output: tree, used",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #545. 16.21 Do some math here or play around with some examples. What does this pair need to look like? What can you say about their values?",
                " #557. 16.21 When you move a value a from array A to array B, then N.s sum decreases by a and B's sum increases by a. What happens when you swap two values? What would be needed to swap two values and get the same sum?",
                " #564. 16.21 If you swap two values, a and b, then the sum of A becomes sumA - a + band the sum of B becomes sumB - b + a. These sums need to be equal.",
                " #577. 17.26 Solution 2: The list of documents similar to {13, 16, 21, 3} includes all documents with a 13, 16, 21, and 3. How can we efficiently find this list? Remember that we'll be doing this for many documents, so some precomputing can make sense.",
                " #583. 16.21 If we do the math, we are looking for a pair of values such that a - b = ( sumA - sumB) / 2. The problem then reduces to looking for a pair of values with a particular difference.",
                " #592. 16.21 A brute force solution is to just look through all pairs of values to find one with the right difference. This will probably look like an outer loop through A with an inner loop through B. For each value, compute the difference and compare it to what we're looking for. Can we be more specific here, though? Given a value in A and a target difference, do we know the exact value of the element within B we're looking for?",
                " #602. 16.21 What the brute force really does is look for a value within B which equals a - target. How can you more quickly find this element? What approaches help us quickly find out if an element exists within an array?",
                " #606. 16.21 We can use a hash table here. We can also try sorting. Both help us locate elements more quickly.",
                " #635. 16.21 What if the sum of A is 11 and the sum of B is 8? Can there be a pair with the right differ\u00ad ence? Check that your solution handles this situation appropriately."
            ],
            "id": "16.21",
            "question": " Sum Swap: Given two arrays of integers, find a pair of values (one value from each array) that you can swap to give the two arrays the same sum. EXAMPLE Input: {4, 1, 2, 1, 1, 2} and {3, 6, 3, 3} Output: {1, 3}",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #474. 16.22 The tricky bit is handling an infinite grid. What are your options?",
                " #481. 16.22 Option (1): Do you actually need an infinite grid? Read the problem again. Do you know the max size of the grid?",
                " #533. 16.22 Option (2):Think about how an Arraylist works. Can you use anArraylist for this?",
                " #540. 16.22 Option (2): It's not impossible to use an Arraylist, but it would be tedious. Perhaps it would be easier to build your own, but specialized for matrices.",
                " #559. 16.22 Option (2): One approach is to just double the size of the array when the ant wanders to an edge. How will you handle the ant wandering into negative coordinates, though? Arrays can't have negative indices.",
                " #570. 16.22 Option (2): Observe that nothing in the problem stipulates that the label for the coor\u00ad dinates must remain the same. Can you move the ant and all cells into positive coordi\u00ad nates? In other words, what would happen if, whenever you needed to grow the array in a negative direction, you relabeled all the indices such that they were still positive?",
                " #599. 16.22 Option (3): Another thing to think about is whether you even need a grid to implement this. What information do you actually need in the problem?",
                " #616. 16.22 Option (3): All you actually need is some way of looking up if a cell is white or black (and of course the position of the ant). Can you just keep a list of all the white cells?",
                " #627. 16.22 Option (3): You could consider keeping a hash set of all the white cells. How will you be able to print the whole grid, though?"
            ],
            "id": "16.22",
            "question": " Langton's Ant: An ant is sitting on an infinite grid of white and black squares. It initially faces right. At each step, it does the following: (1) At a white square, flip the color of the square, turn 90 degrees right (clockwise), and move forward one unit. (2) At a black square, flip the color of the square, turn 90 degrees left (counter-clockwise), and move forward one unit. Write a program to simulate the first K moves that the ant makes and print the final board as a grid. Note that you are not provided with the data structure to represent the grid. This is something you must design yourself. The only input to your method is K. You should print the final grid and return nothing. The method signature might be something like void printKMoves ( int K). pg 512 Implement a method rand7() given rand5( ). That is, given a method that generates a random number between O and 4 (inclusive), write a method that generates a random number between O and 6 (inclusive).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #505. 16.23 Be very careful that your solution actually returns each value from O through 6 with equal probability.",
                " #574. 16.23 Start with a brute force solution. How many times does it call rands () in the worst case?",
                " #637. 16.23 Make a table indicating how each possible sequence of calls to rands () would map to the result of rand?(). For example, if you were implementing rand3() with ( rand2 () + rand2 ()) % 3, then the table would look like the below. Analyze this table. What can it tell you? [IMG MISSING !]",
                " #668. 16.23 Looking at this table again, note that the number of rows will be S k , where k is the max number of calls to rands ().In order to make each value between O and 6 have equal probability, th of the rows must map to 0, th to l, and so on. Is this possible? X",
                " #697. 16.23 It is not possible to divide S k evenly by 7. Does this mean that you can't implement rand7 () with rands()?",
                " #720. 16.23 You can implement rand7() with rands(), you just can't do it deterministically (such that you know it will definitely terminate after a certain number of calls). Given this, write a solution that works."
            ],
            "id": "16.23",
            "question": " Rand7 from Rands:",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #548. 16.24 Start with a brute force solution. What is the runtime? What is the best conceivable runtime for this problem?",
                " #597. 16.24 Can we make this faster with a hash table?",
                " #644. 16.24 What if the array were sorted?",
                " #673. 16.24 If we sorted the array, we could do repeated binary searches for the complement of a number. What if, instead, the array is given to us sorted? Could we then solve the problem in O(N) time and 0(1) space?"
            ],
            "id": "16.24",
            "question": " Pairs with Sum: specified value. _pg 518 Design an algorithm to find all pairs of integers within an array which sum to a Design and build a \"least recently used\" cache, which evicts the least recently used item. The cache should map from keys to values (allowing you to insert and retrieve a value associ\u00ad ated with a particular key) and be initialized with a max size. When it is full, it should evict the least recently used item.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #630. 16.25 What data structure would be most useful for the lookups? What data structure would be most useful to know and maintain the order of items?",
                " #694. 16.25 Both a hash table and a doubly linked list would be useful. Can you combine the two?"
            ],
            "id": "16.25",
            "question": " LRU Cache: Design and build a \"least recently used\" cache, which evicts the least recently used item. The cache should map from keys to values (allowing you to insert and retrieve a value associ­ ated with a particular key) and be initialized with a max size. When it is full, it should evict the least recently used item.",
            "solution": "<pre>package Q16_25_LRU_Cache;\n\nimport java.util.HashMap;\n\npublic class Cache {\t\t\t\n\tprivate int maxCacheSize;\n\tprivate HashMap<Integer, LinkedListNode> map = new HashMap<Integer, LinkedListNode>();\n\tprivate LinkedListNode listHead = null;\n\tpublic LinkedListNode listTail = null;\n\t\n\t\n\tpublic Cache(int maxSize) {\n\t\tmaxCacheSize = maxSize;\n\t}\n\t\n\t/* Get value for key and mark as most recently used. */\n\tpublic String getValue(int key) {\n\t\tLinkedListNode item = map.get(key);\n\t\tif (item == null) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t/* Move to front of list to mark as most recently used. */\n\t\tif (item != listHead) { \n\t\t\tremoveFromLinkedList(item);\n\t\t\tinsertAtFrontOfLinkedList(item);\n\t\t}\n\t\treturn item.value;\n\t}\n\t\n\t/* Remove node from linked list. */\n\tprivate void removeFromLinkedList(LinkedListNode node) {\n\t\tif (node == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.prev != null) {\n\t\t\tnode.prev.next = node.next;\n\t\t}\n\t\tif (node.next != null) {\n\t\t\tnode.next.prev = node.prev;\n\t\t}\n\t\tif (node == listTail) {\n\t\t\tlistTail = node.prev;\n\t\t}\n\t\tif (node == listHead) {\n\t\t\tlistHead = node.next;\n\t\t}\t\t\n\t}\n\t\n\t/* Insert node at front of linked list. */\n\tprivate void insertAtFrontOfLinkedList(LinkedListNode node) {\n\t\tif (listHead == null) {\n\t\t\tlistHead = node;\n\t\t\tlistTail = node;\n\t\t} else {\n\t\t\tlistHead.prev = node;\n\t\t\tnode.next = listHead;\n\t\t\tlistHead = node;\n\t\t}\n\t}\n\t\n\t/* Remove key, value pair from cache, deleting from hash table\n\t * and linked list. */\n\tpublic boolean removeKey(int key) {\n\t\tLinkedListNode node = map.get(key);\n\t\tremoveFromLinkedList(node);\n\t\tmap.remove(key);\n\t\treturn true;\n\t}\n\t\n\t/* Put key, value pair in cache. Removes old value for key if\n\t * necessary. Inserts pair into linked list and hash table.*/\n\tpublic void setKeyValue(int key, String value) {\n\t\t/* Remove if already there. */\n\t\tremoveKey(key); \n\t\t\n\t\t/* If full, remove least recently used item from cache. */\n\t\tif (map.size() >= maxCacheSize && listTail != null) {\n\t\t\tremoveKey(listTail.key);\n\t\t}\n\t\t\n\t\t/* Insert new node. */\n\t\tLinkedListNode node = new LinkedListNode(key, value);\n\t\tinsertAtFrontOfLinkedList(node);\n\t\tmap.put(key, node);\n\t}\n\t\n\tpublic String getCacheAsString() {\n\t\tif (listHead == null) return \"\";\n\t\treturn listHead.printForward();\n\t}\n\t\n\tprivate class LinkedListNode {\n\t\tprivate LinkedListNode next;\n\t\tprivate LinkedListNode prev;\n\t\tpublic int key;\n\t\tpublic String value;\n\t\tpublic LinkedListNode(int k, String v) {\n\t\t\tkey = k;\n\t\t\tvalue = v;\n\t\t}\n\t\t\n\t\tpublic String printForward() {\n\t\t\tString data = \"(\" + key + \",\" + value + \")\";\n\t\t\tif (next != null) {\n\t\t\t\treturn data + \"->\" + next.printForward();\n\t\t\t} else {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t}\n\t}\t\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/16_25.png\" />"
        },
        {
            "hints": [],
            "id": "16.26",
            "question": " Calculator: Input: Output: 2*3+5/6*3+15",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #467. 17.1 Walk through binary addition by hand (slowly!) and try to really understand what is happening.",
                " #544. 17.1 You can think about binary addition as iterating through the number, bit by bit, adding two bits, and then carrying over the one if necessary. You could also think about it as grouping the operations. What if you first added each of the bits (without carrying any overflow)? After that, you can handle the overflow.",
                " #628. 17.1 The adding step alone would convert 1 + 1 -> 0, 1 + 0 -> 1, 0 + 1 -> 1, O + O -> O. How do you do this without the+ sign?",
                " #642. 17.1 You can do the add step with an XOR.",
                " #664. 17.1 Now focus on the carrying. In what cases will values carry? How do you apply the carry to the number?",
                " #692. 17.1 The carry will happen when you are doing 1 + 1. How do you apply the carry to the number?",
                " #724. 17.1 You might need to do the add/carry operation more than once. Adding carry to sum might cause new values to carry.",
                " #483. 17.2 Try approaching this problem recursively.",
                " #579. 17.2 Suppose you had a method shuffle that worked on decks up to n - 1 elements. Could you use this method to implement a new shuffle method that works on decks up to n elements?",
                " #634. 17.2 You could build this algorithm recursively by swapping the nth element for any of the elements before it. What would this look like iteratively?",
                " #494. 17.3 If you haven't already, solve 17.2 on page 186.",
                " #596. 17.3 Try this recursively. Suppose you had an algorithm to get a subset of size m from n - 1 elements. Could you develop an algorithm to get a subset of size m from n elements?"
            ],
            "id": "17.1",
            "question": " 17 .1 Add Without Plus: Write a function that adds two numbers. You should not use+ or any arithmetic operators. 17 .2 Shuffle: Write a method to shuffle a deck of cards. It must be a perfect shuffle-in other words, each of the 52! permutations of the deck has to be equally likely. Assume that you are given a random number generator which is perfect. 17 .3 Random Set: Write a method to randomly generate a set of m integers from an array of size n. Each element must have equal probability of being chosen.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #483. 17.2 Try approaching this problem recursively.",
                " #579. 17.2 Suppose you had a method shuffle that worked on decks up to n - 1 elements. Could you use this method to implement a new shuffle method that works on decks up to n elements?",
                " #634. 17.2 You could build this algorithm recursively by swapping the nth element for any of the elements before it. What would this look like iteratively?",
                " #494. 17.3 If you haven't already, solve 17.2 on page 186.",
                " #596. 17.3 Try this recursively. Suppose you had an algorithm to get a subset of size m from n - 1 elements. Could you develop an algorithm to get a subset of size m from n elements?"
            ],
            "id": "17.2",
            "question": " 17.2 Shuffle: Write a method to shuffle a deck of cards. It must be a perfect shuffle-in other words, each of the 52! permutations of the deck has to be equally likely. Assume that you are given a random number generator which is perfect.",
            "solution": "<pre>package Q17_02_Shuffle;\n\nimport CtCILibrary.AssortedMethods;\n\npublic class Question {\n\n\t/* Random number between lower and higher, inclusive */\n\tpublic static int rand(int lower, int higher) { \n\t\treturn lower + (int)(Math.random() * (higher - lower + 1));\n\t}\t\n\t\n\tpublic static int[] shuffleArrayRecursively(int[] cards, int i) {\n\t\tif (i == 0) {\n\t\t\treturn cards;\n\t\t}\n\t\t\n\t\t/* shuffle elements 0 through index - 1 */\n\t\tshuffleArrayRecursively(cards, i - 1);\n\t\tint k = rand(0, i);\t\t\n\t\t\n\t\t/* Swap element k and index */\n\t\tint temp = cards[k];\n\t\tcards[k] = cards[i];\n\t\tcards[i] = temp;\n\t\t\n\t\t/* Return shuffled array */\n\t\treturn cards;\n \t}\n\t\n\tpublic static void shuffleArrayIteratively(int[] cards) { \n\t\tfor (int i = 0; i < cards.length; i++) { \n\t\t\tint k = rand(0, i);\n\t\t\tint temp = cards[k];\n\t\t\tcards[k] = cards[i];\n\t\t\tcards[i] = temp;\n\t\t} \n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[] cards = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n\t\tSystem.out.println(AssortedMethods.arrayToString(cards));\n\t\tshuffleArrayIteratively(cards);\n\t\tSystem.out.println(AssortedMethods.arrayToString(cards));\n\t}\n\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/17_2.png\" />"
        },
        {
            "hints": [
                " #494. 17.3 If you haven't already, solve 17.2 on page 186.",
                " #596. 17.3 Try this recursively. Suppose you had an algorithm to get a subset of size m from n - 1 elements. Could you develop an algorithm to get a subset of size m from n elements?"
            ],
            "id": "17.3",
            "question": "17.3 Random Set: Write a method to randomly generate a set of m integers from an array of size n. Each element must have equal probability of being chosen.",
            "solution": "<pre>package Q17_03_Random_Set;\n\nimport CtCILibrary.AssortedMethods;\n\npublic class QuestionAlternate {\n\n\t/* Random number between lower and higher, inclusive */\n\tpublic static int rand(int lower, int higher) { \n\t\treturn lower + (int)(Math.random() * (higher - lower + 1));\n\t}\n\t\n\t/* pick M elements from original array, using only elements 0 through i (inclusive).*/\n\tpublic static int[] pickMRecursively(int[] original, int m, int i) {\n\t\tif (i + 1 < m) { // Not enough elements\n\t\t\treturn null; \n\t\t} else if (i + 1 == m) { // Base case -- copy first m elements into array\n\t\t\tint[] set = new int[m];\n\t\t\tfor (int k = 0; k < m; k++) {\n\t\t\t\tset[k] = original[k];\n\t\t\t}\n\t\t\treturn set;\n\t\t} else {\n\t\t\tint[] set = pickMRecursively(original, m, i - 1);\n\t\t\tint k = rand(0, i);\n\t\t\tif (k < m) {\n\t\t\t\tset[k] = original[i];\n\t\t\t}\n\t\t\treturn set;\n\t\t}\n\t}\t\n\n\t/* pick M elements from original array.*/\n\tpublic static int[] pickMIteratively(int[] original, int m) {\n\t\tint[] subset = new int[m];\n\t\t\n\t\t/* Fill in subset array with first part of original array */\n\t\tfor (int i = 0; i < m ; i++) {\n\t\t\tsubset[i] = original[i];\n\t\t}\n\t\t\n\t\t/* Go through rest of original array. */\n\t\tfor (int i = m; i < original.length; i++) {\n\t\t\tint k = rand(0, i);\n\t\t\tif (k < m) {\n\t\t\t\tsubset[k] = original[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn subset;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[] cards = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n\t\tSystem.out.println(AssortedMethods.arrayToString(cards));\n\t\tint[] set = pickMIteratively(cards, 4);\n\t\tSystem.out.println(AssortedMethods.arrayToString(set));\n\t}\t\n\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/17_3.png\" />"
        },
        {
            "hints": [
                " #659. 17.4 To find the least significant bit of the missing number, note that you know how many 0s and ls to expect. For example, if you see three 0s and three ls in the least significant bit, then the missing number's least significant bit must be a 1. Think about it: in any sequence of 0s and ls, you'd get a 0, then a 1, then a 0, then a 1, and so on.",
                " #683. 17.4 Once you've identified that the least significant bit is a O (or a 1 ), you can rule out all the numbers without O as the least significant bit. How is this problem different from the earlier part?"                
            ],
            "id": "17.4",
            "question": " Missing Number: An array A contains all the integers from Oto n, except for one number which is missing. In this problem, we cannot access an entire integer in A with a single operation. The elements of A are represented in binary, and the only operation we can use to access them is \"fetch the jth bit of A[ i ],\"which takes constant time. Write code to find the missing integer. Can you do it in O(n) time?",
            "solution": "<pre>package Q17_04_Missing_Number;\n\nimport java.util.ArrayList;\nimport java.util.Random;\n\npublic class Question {\n    /* Create a random array of numbers from 0 to n, but skip 'missing' */\n    public static ArrayList<BitInteger> initialize(int n, int missing) {\n        BitInteger.INTEGER_SIZE = Integer.toBinaryString(n).length();\n        ArrayList<BitInteger> array = new ArrayList<BitInteger>();\n        \n        for (int i = 1; i <= n; i++) {\n        \tarray.add(new BitInteger(i == missing ? 0 : i));\n        }\n\n        // Shuffle the array once.\n        for (int i = 0; i < n; i++){\n            int rand = i + (int) (Math.random() * (n-i));\n            array.get(i).swapValues(array.get(rand));\n        }\n        \n        return array;\n    }\n\n\n    public static int findMissing(ArrayList<BitInteger> array) {\n       return findMissing(array, BitInteger.INTEGER_SIZE - 1);\n    }        \n\n    private static int findMissing(ArrayList<BitInteger> input, int column) {\n    \tif (column < 0) { // Base case and error condition\n    \t\treturn 0;\n    \t}\n    \tArrayList<BitInteger> oneBits = new ArrayList<BitInteger>(input.size()/2);\n    \tArrayList<BitInteger> zeroBits = new ArrayList<BitInteger>(input.size()/2);\n        for (BitInteger t : input) {\n            if (t.fetch(column) == 0) {\n                zeroBits.add(t);\n            } else {\n                oneBits.add(t);\n            }\n        }\n        if (zeroBits.size() <= oneBits.size()) {\n        \tint v = findMissing(zeroBits, column - 1);\n        \tSystem.out.print(\"0\");\n            return (v << 1) | 0;\n        } else {\n        \tint v = findMissing(oneBits, column - 1);\n        \tSystem.out.print(\"1\");\n            return (v << 1) | 1;\n        }\n    }\n\n    public static void main(String[] args) {\n        Random rand = new Random(); \n        int n = rand.nextInt(300000) + 1;\n        int missing = rand.nextInt(n+1);\n        ArrayList<BitInteger> array = initialize(n, missing);\n        System.out.println(\"The array contains all numbers but one from 0 to \" + n + \", except for \" + missing);\n        \n        int result = findMissing(array);\n        if (result != missing) {\n            System.out.println(\"Error in the algorithm!\n\" + \"The missing number is \" + missing + \", but the algorithm reported \" + result);\n        } else {\n            System.out.println(\"The missing number is \" + result);\n        }\n    }\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/17_4.png\" />"
        },
        {
            "hints": [
                " #485. 17.5 It doesn't really matter which letter or number it is. You can simplify this problem to just having an array of As and Bs. You would then be looking for the longest subarray with an equal number of As and Bs."
            ],
            "id": "17.5",
            "question": " 17.5 Letters and Numbers: Given an array filled with letters and numbers, find the longest subarray with an equal number of letters and numbers.",
            "solution": "<pre>package Q17_05_Letters_and_Numbers;\n\npublic class QuestionA {\n\tpublic static char[] extractSubarray(char[] array, int start, int end) {\n\t\tif (start > end) return null;\t\t\n\t\tchar[] subarray = new char[end - start + 1];\n\t\tfor (int i = start; i <= end; i++) {\n\t\t\tsubarray[i - start] = array[i];\n\t\t}\n\t\treturn subarray;\n\t}\n\t\n\tpublic static boolean hasEqualLettersNumbers(char[] array, int start, int end) {\n\t\tint counter = 0;\n\t\tfor (int i = start; i <= end; i++) {\n\t\t\tif (Character.isLetter(array[i])) {\n\t\t\t\tcounter++;\n\t\t\t} else if (Character.isDigit(array[i])) {\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t}\n\t\treturn counter == 0;\n\t}\n\t\n\tpublic static char[] findLongestSubarray(char[] array) {\n\t\tfor (int len = array.length; len > 1; len--) {\n\t\t\tfor (int i = 0; i <= array.length - len; i++) {\n\t\t\t\tif (hasEqualLettersNumbers(array, i, i + len - 1)) {\n\t\t\t\t\treturn extractSubarray(array, i, i + len - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\treturn null;\t\n\t}\t\n\t\n\tpublic static void main(String[] args) {\n\t\tchar b = '1';\n\t\tchar a = 'a';\n\t\tchar[] array = {a, b, a, b, a, b, b, b, b, b, a, a, a, a, a, b, a, b, a, b, b, a, a, a, a, a, a, a};\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tSystem.out.print(array[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tchar[] max = findLongestSubarray(array);\n\t\tSystem.out.println(max.length);\n\t\tfor (int i = 0; i < max.length; i++) {\n\t\t\tSystem.out.print(max[i] + \" \");\n\t\t}\n\t\tSystem.out.println(\"\nIs Valid? \" + hasEqualLettersNumbers(max, 0, max.length - 1));\n\t}\n\n}</pre>",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/17_5a.png\" /><br /><img src=\"/assets/images/solutions/17_5b.png\" /><br />"
        },
        {
            "hints": [
                " #573. 17.6 Start with a brute force solution.",
                " #641. 17.6 Is there a faster way of calculating how many twos are in a particular digit across a range of numbers? Observe that roughly Xe th of any digit should be a 2-but only roughly. How do you make that more exact?"
            ],
            "id": "17.6",
            "question": " Count of 2s: Write a method to count the number of 2s that appear in all the numbers between O and n (inclusive). EXAMPLE Input: 25 Output: 9 (2, 12, 20, 21, 22, 23, 24 and 25. Note that 22 counts for two 2s.)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #478. 17.7 Discuss the naive approach: merging names together when they are synonyms. How would you identify transitive relationships? A == B, A == C, and C == D implies A == D == B == C.",
                " #493. 17.7 The core part of the problem is to group names into the various spellings. From there, figuring out the frequencies is relatively easy.",
                " #512. 17.7 One thing to try is maintaining a mapping of each name to its\"true\"spelling. You would also need to map from a true spelling to all the synonyms. Sometimes, you might need to merge two different groups of names. Play around with this algorithm to see if you can get it to work. Then see if you can simplify/optimize it.",
                " #537. 17.7 An easier way of taking the above approach is to have each name map to a list of alter\u00ad nate spellings. What should happen when a name in one group is set equal to a name in another group?",
                " #586. 17.7 If each name maps to a list of its alternate spellings, you might have to update a lot of lists when you set X and Y as synonyms. If Xis a synonym of {A, B, C}, and Y is a synonym of{D, E, F}then you would need to add{Y, D, E, F}toA's synonym list, B's synonym list, C's synonym list, and X's synonym list. Ditto for {Y, D, E, F}. Can we make this faster?",
                " #605. 17.7 lnstead,X,A, B,and C should map to the same instance of the set {X, A, B, C}. Y, D, E, and F should map to the same instance of {Y, D, E, F}. When we set X and Y as synonyms, we can then just copy one of the sets into the other (e.g., add {Y, D, E, F} to {X, A, B, C}). How else do we change the hash table?",
                " #655. 17.7 An alternative approach is to think of this as a graph. How would this work?",
                " #675. 17.7 We can treat adding X, Y as synonyms as adding an edge between the X node and the Y node. How then do we figure out the groups of synonyms?",
                " #704. 17.7 Each connected subgraph represents a group of synonyms. To find each group, we can do repeated breadth-first (or depth-first) searches."
            ],
            "id": "17.7",
            "question": " Baby Names: Each year, the government releases a list of the 10000 most common baby names and their frequencies (the number of babies with that name). The only problem with this is that some names have multiple spellings. For example, \"John\" and ''.Jon\" are essentially the same name but would be listed separately in the list. Given two lists, one of names/frequencies and the other of pairs of equivalent names, write an algorithm to print a new list of the true frequency of each name. Note that if John and Jon are synonyms, and Jon and Johnny are synonyms, then John and Johnny are synonyms. (It is both transitive and symmetric.) In the final list, any name can be used as the \"real\" name. EXAMPLE Input: Names: John (15), Jon (12), Chris (13), Kris (4), Christopher (19) Synonyms: (Jon, John), (John, Johnny), (Chris, Kris), (Chris, Christopher) Output: John (27), Kris (36)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #638. 17.8 This problem asks us to find the longest sequence of pairs you can build such that both sides of the pair are constantly increasing. What if you needed only one side of the pair to increase?",
                " #657. 17.8 If you needed only one side of the pair to increase, then you would just sort all the values on that side. Your longest sequence would in fact be all of the pairs (other than any duplicates, since the longest sequence needs to strictly increase). What does this tell you about the original problem?",
                " #666. 17.8 If you sort the values based on height, then this will tell you the ordering of the final pairs. The longest sequence must be in this relative order (but not necessarily containing all of the pairs). You now just need to find the longest increasing subsequence on weight while keeping the items in the same relative order. This is essentially the same problem as having an array of integers and trying to find the longest sequence you can build (without reordering those items).",
                " #682. 17.8 Try a recursive approach that just evaluates all possibilities.",
                " #699. 17.8 Another way to think about the problem is this: if you had the longest sequence ending at each element A[ 0] through A[ n -1 ], could you use that to find the longest sequence ending at element A [ n -1]?"
            ],
            "id": "17.8",
            "question": " Circus Tower: A circus is designing a tower routine consisting of people standing atop one anoth\u00ad er's shoulders. For practical and aesthetic reasons, each person must be both shorter and lighter than the person below him or her. Given the heights and weights of each person in the circus, write a method to compute the largest possible number of people in such a tower. EXAMPLE lnput(ht,wt): (65, 100) (70, 150) (56, 90) (75, 190) (60, 95) (68, 110) Output: The longest tower is length 6 and includes from top to bottom: (56, 90) (60,95) (65,100) (68,110) (70,150) (75,190)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [],
            "id": "17.9",
            "question": " Kth Multiple: Design an algorithm to find the kth number such that the only prime factors are 3, 5, and 7. Note that 3, 5, and 7 do not have to be factors, but it should not have any other prime factors. For example, the first several multiples would be (in order) 1, 3, 5, 7, 9, 15, 21.",
            "solution": "<pre>package Q17_09_Kth_Multiple;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class QuestionA {\n\n\tpublic static ArrayList<Integer> allPossibleKFactors(int k) {\n\t\tArrayList<Integer> values = new ArrayList<Integer>();\n\t\tfor (int a = 0; a <= k; a++) { // 3\n\t\t\tint powA = (int) Math.pow(3,  a);\n\t\t\tfor (int b = 0; b <= k; b++) { // 5\n\t\t\t\tint powB = (int) Math.pow(5,  b);\n\t\t\t\tfor (int c = 0; c <= k; c++) { // 7\n\t\t\t\t\tint powC = (int) Math.pow(7, c);\n\t\t\t\t\tint value = powA * powB * powC;\n\t\t\t\t\tif (value < 0 || powA == Integer.MAX_VALUE || powB == Integer.MAX_VALUE || powC == Integer.MAX_VALUE) {\n\t\t\t\t\t\tvalue = Integer.MAX_VALUE;\n\t\t\t\t\t}\n\t\t\t\t\tvalues.add(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn values;\n\t}\n\t\n\tpublic static int getKthMagicNumber(int k) {\n\t\tArrayList<Integer> possibilities = allPossibleKFactors(k);\n\t\tCollections.sort(possibilities);\n\t\treturn possibilities.get(k);\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tfor (int i = 0; i < 50; i++) {\n\t\t\tSystem.out.println(i + \" : \" + getKthMagicNumber(i));\n\t\t}\n\t}\n}\n\n\npackage Q17_09_Kth_Multiple;\n\nimport java.util.Queue;\nimport java.util.LinkedList;\n\npublic class QuestionB {\n\n\tpublic static int removeMin(Queue<Integer> q) {\n\t\tint min = q.peek();\n\t\tfor (Integer v : q) {\n\t\t\tif (min > v) {\n\t\t\t\tmin = v;\n\t\t\t}\n\t\t}\n\t\twhile (q.contains(min)) {\n\t\t\tq.remove(min);\n\t\t}\n\t\treturn min;\n\t}\n\t\n\tpublic static void addProducts(Queue<Integer> q, int v) {\n\t\tq.add(v * 3);\n\t\tq.add(v * 5);\n\t\tq.add(v * 7);\n\t}\n\t\n\tpublic static int getKthMagicNumber(int k) {\n\t\tif (k < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tint val = 1;\n\t\tQueue<Integer> q = new LinkedList<Integer>();\n\t\taddProducts(q, 1);\n\t\tfor (int i = 0; i < k; i++) { // Start at 1 since we've already done one iteration\n\t\t\tval = removeMin(q);\n\t\t\taddProducts(q, val);\n\t\t}\n\t\treturn val;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tfor (int i = 0; i < 14; i++) {\n\t\t\tSystem.out.println(i + \" : \" + getKthMagicNumber(i));\n\t\t}\n\t}\n}</pre>",
            "solutionRuntime": "O( k^3 ln(k) )",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/17_9a.png\" /><br /><img src=\"/assets/images/solutions/17_9b.png\" /><br /><img src=\"/assets/images/solutions/17_9c.png\" /><br /><img src=\"/assets/images/solutions/17_9d.png\" /><br /><img src=\"/assets/images/solutions/17_9e.png\" /><br />"
        },
        {
            "hints": [
                " #522. 17.10 Start with a brute force solution. Can you just check each value to see if it's the majority element? #S23. 16.1 O Solution 2: Observe that people are\"fungible:'lt doesn't matter who was born and when they died. All you need is a list of birth years and death years. This might make the ques\u00ad tion of how you sort the list of people easier. #S24. 16.25 First scope the problem. What are the features you would want? #S25. 17.24 Can you do any sort of precomputation to make computing the sum of a submatrix 0(1)?",
                " #566. 17.10 Consider the brute force solution. We pick an element and then validate if it's the majority element by counting the number of matching and non-matching elements. Suppose, for the first element, the first few checks reveal seven non-matching elements and three matching elements. Is it necessary to keep checking this element?",
                " #604. 17.1 O The majority element will not necessarily look like the majority element at first. It is possible, for example, to have the majority element appear in the first element of the array and then not appear again for the next eight elements. However, in those cases, the majority element will appear later in the array (in fact, many times later on in the array). It's not necessarily critical to continue checking a specific instance of an element for majority status once it's already looking \"unlikely:'",
                " #620. 17.10 Note also that the majority element must be the majority element for some subarray and that no subarray can have multiple majority elements.",
                " #650. 17.10 Try this: Given an element, start checking if this is the start of a subarray for which it's the majority element. Once it's become \"unlikely\" (appears less than half the time), start checking at the next element (the element after the subarray)."
            ],
            "id": "17.10",
            "question": " Majority Element: A majority element is an element that makes up more than half of the items in an array. Given a positive integers array, find the majority element. If there is no majority element, return-1. Do this inO(N) time and 0(1) space. EXAMPLE Input: 1 2 5 9 5 9 5 5 5 Output: 5",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #486. 17.11 Consider first the algorithm for finding the closest distance if you will run the algorithm only once. You should be able to do this in O(N) time, where N is the number of words in the document.",
                " #501. 17.11 Adapt your algorithm for one execution of the algorithm for repeated executions. What is the slow part? Can you optimize it?",
                " #538. 17.11 You could build a lookup table that maps from a word to a list of the locations where each word appears. How then could you find the closest two locations?",
                " #558. 17.11 If you had a list of the occurrences of each word, then you are really looking for a pair of values within two arrays (one value for each array) with the smallest difference. This could be a fairly similar algorithm to your initial algorithm.",
                " #633. 17.11 Can you just iterate through both arrays with two pointers? You should be able to do it in O(A+B) time, where A and Bare the sizes of the two arrays."
            ],
            "id": "17.11",
            "question": " Word Distance: You have a large text file containing words. Given any two words, find the shortest distance (in terms of number of words) between them in the file. If the operation will be repeated many times for the same file (but different pairs of words), can you optimize your solution?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #509. 17.12 Try a recursive approach.",
                " #608. 17.12 Think about it this way: If you had methods called convert Left and convert Right (which would convert left and right subtrees to doubly linked lists), could you put those together to convert the whole tree to a doubly linked list?",
                " #646. 17.12 Once you have a basic idea for a recursive algorithm, you might get stuck on this: some\u00ad times your recursive algorithm needs to return the start of the linked list, and some\u00ad times it needs to return the end. There are multiple ways of solving this issue. Brainstorm some of them.",
                " #680. 17.12 To handle whether your recursive algorithm should return the start or the end of the linked list, you could try to pass a parameter down that acts as a flag. This won't work very well, though. The problem is that when you call convert (current. left), you want to get the end of left's linked list. This way you can join the end of the linked list to current. But, if current is someone else's right subtree, c onvert(current) needs to pass back the start of the linked list (which is actually the start of current. left's linked list). Really, you need both the start and end of the linked list.",
                " #707. 16.7 When a > b, then a - b > 0. Can you get the sign bit of a - b?"
            ],
            "id": "17.12",
            "question": " BiNode: Consider a simple data structure called BiNode, which has pointers to two other nodes. public class BiNode { public BiNode nodel, node2; public int data; } The data structure BiNode could be used to represent both a binary tree (where nodel is the left node and node2 is the right node) or a doubly linked list (where nodel is the previous node and node2 is the next node). Implement a method to convert a binary search tree (implemented with BiNode) into a doubly linked list. The values should be kept in order and the operation should be performed in place (that is, on the original data structure).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #496. 17.13 Try a recursive approach.",
                " #623. 17.13 Can you just try all possibilities? What might that look like?",
                " #656. 17.13 You can think about the choices the recursive algorithm makes in one of two ways: (1) At each character, should I put a space here? (2) Where should I put the next space? You can solve both of these recursively.",
                " #677. 17.13 Will the recursive algorithm hit the same subproblems repeatedly? Can you optimize with a hash table?",
                " #739. 17.13 In real life, we would know that some paths will not lead to a word. For example, there are no words that start with hellothisism. Can we terminate early when going down a path that we know won't work?",
                " #749. 17.13 For early termination, try a trie."
            ],
            "id": "17.13",
            "question": " Re-Space: Oh, no! You have accidentally removed all spaces, punctuation, and capitalization in a lengthy document. A sentence like \"I reset the computer. It still didn't boot!\" became \"iresetthecomputeri tstilldidntboot''. You'll deal with the punctuation and capi\u00ad talization later; right now you need to re-insert the spaces. Most of the words are in a dictionary but a few are not. Given a dictionary (a list of strings) and the document (a string), design an algorithm to unconcatenate the document in a way that minimizes the number of unrecognized characters. EXAMPLE: Input: jesslookedjustliketimherbrother Output: jess looked just like tim her brother (7 unrecognized characters)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #470. 17.14 There are actually several approaches. Brainstorm these. It's okay to start off with a naive approach.",
                " #530. 17.14 Consider thinking about reorganizing the data in some way or using additional data structures.",
                " #552. 17.14 Can you sort the numbers?",
                " #593. 17.14 What about using a heap or tree of some sort?",
                " #625. 17.14 If you picked an arbitrary element, how long would it take you to figure out the rank of this element (the number of elements bigger or smaller than it)?",
                " #647. 17.14 If you picked an arbitrary element, you would, on average, wind up with an element around the 50th percentile mark (half the elements above it and half the elements below). What if you did this repeatedly?",
                " #661. 17.14 Think about the previous hint some more, particularly in the context of quicksort.",
                " #678. 17.14 What if, when you picked an element, you swapped elements around (as you do in quicksort) so that the elements below it would be located before the elements above it? If you did this repeatedly, could you find the smallest one million numbers?"
            ],
            "id": "17.14",
            "question": " Smallest K: Design an algorithm to find the smallest K numbers in an array.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #475. 17.15 Try simplifying this problem: What if you just needed to know the longest word made up of two other words in the list?",
                " #499. 17.15 If we wanted to know just the longest word made up of other words in the list, then we could iterate over all words, from longest to shortest, checking if each could be made up of other words. To check this, we split the string in all possible locations.",
                " #543. 17.15 Extend the earlier idea to multiple words. Can we just break each word up in all possible ways?",
                " #589. 17.15 When you get recursive algorithms that are very inefficient try looking for repeated subproblems."
            ],
            "id": "17.15",
            "question": " Longest Word: Given a list of words, write a program to find the longest word made of other words in the list. EXAMPLE lnput:cat, banana, dog, nana, walk, walker, dogwalker Output: dogwalker",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #495. 17.16 There are recursive and iterative solutions to this problem, but it's probably easier to start with the recursive solution.",
                " #504. 17 .16 Recursive solution: You have two choices at each appointment (take the appointment or reject the appointment). As a brute force approach, you can recurse through all possi\u00ad bilities. Note, though, that if you take request i, your recursive algorithm should skip request i + 1.",
                " #576. 16.10 Solution 3: Be careful with the little details in this problem. Does your algorithm/code handle a person who dies in the same year that they are born? This person should be counted as one person in the population count.",
                " #526. 17.16 Recursive solution: The runtime of your memoization approach should be O(N), with O(N) space.",
                " #542. 17.16 Iterative solution: Take the recursive solution and investigate it more. Can you imple\u00ad ment a similar strategy iteratively?",
                " #554. 17.16 Iterative solution: It's probably easiest to start with the end of the array and work back\u00ad wards.",
                " #562. 17.16 Iterative solution: Observe that you would never skip three appointments in a row. Why would you? You would always be able to take the middle booking.",
                " #568. 17.16 Iterative solution: If you take appointment i, you will never take appointment i + 1, but you will always take appointment i + 2 or i + 3.",
                " #578. 17.16 Iterative solution: Use an example and work backwards. You can easily find the optimal solution for the subarrays {rJ, {rn_1, rn}, {rn_2, \u2022\u2022\u2022 , rJ. How would you use those to quickly find the optimal solution for { r n-3' \u2022\u2022\u2022 , r \"}?",
                " #587. 17 .16 Iterative solution: If you take an appointment, you can't take the next appointment, but you can take anything after that. Therefore, optimal ( r i' \u2022\u2022\u2022 , r n) = max ( r i + optimal(r 1 +2, \u2022\u2022\u2022 , rJ, optimal(r 1 +1, \u2022\u2022\u2022 , rJ).You can solve this itera\u00ad tively by working backwards.",
                " #607. 17.16 Iterative solution: If you're careful about what data you really need, you should be able to solve this in O(n) time and 0(1) additional space."
            ],
            "id": "17.16",
            "question": " The Masseuse: A popular masseuse receives a sequence of back-to-back appointment requests and is debating which ones to accept. She needs a 15-minute break between appointments and therefore she cannot accept any adjacent requests. Given a sequence of back-to-back appoint\u00ad ment requests (all multiples of 15 minutes, none overlap, and none can be moved), find the optimal (highest total booked minutes) set the masseuse can honor. Return the number of minutes. EXAMPLE Input: {30, 15, 60, 75, 45, 15, 15, 45} Output:180 minutes ({30, 60, 45, 45}).",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #480. 17.17 Start with a brute force solution. What is the runtime?",
                " #582. 17.17 Can you use a trie?",
                " #617. 17.17 One solution is to insert every suffix of the larger string into the trie. For example, if the word is dogs, the suffixes would be dogs, ogs, gs, and s. How would this help you solve the problem? What is the runtime here?",
                " #743. 17.17 Alternatively, you could insert each of the smaller strings into the trie. How would this help you solve the problem? What is the runtime?"
            ],
            "id": "17.17",
            "question": " Multi Search: Given a string band an array of smaller strings T, design a method to search b for each small string in T. pg 578",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #645. 17.18 Start with a brute force solution.",
                " #652. 17.18 One brute force solution is to take each starting position and move forward until you've found a subsequence which contains all the target characters.",
                " #669. 1 7 .18 X Another way of thinking about the brute force is that we take each starting index and find the next instance of each element in the target string. The maximum of all these next instances marks the end of a subsequence which contains all the target characters. What is the runtime of this? How can we make it faster?",
                " #687. 16.19 Try recursion to count the number of water cells.",
                " #697. 16.23 It is not possible to divide S k evenly by 7. Does this mean that you can't implement rand7 () with rands()?",
                " #725. 17.18 Once you have the precomputation solution figured out, think about how you can reduce the space complexity. You should be able to get it down to O(SB) time and O( B) space (where B is the size of the larger array and S is the size of the smaller array).",
                " #731. 17.18 Another way to think about it is this: Imagine you had a list of the indices where each item appeared. Could you find the first possible subsequence with all the elements? Could you find the second?",
                " #741. 17.18 Consider using a heap."
            ],
            "id": "17.18",
            "question": " Shortest Supersequence: You are given two arrays, one shorter (with all distinct elements) and one longer. Find the shortest subarray in the longer array that contains all the elements in the shorter array. The items can appear in any order. EXAMPLE lnput:{1, 5, 9} I {7, 5, 9, 0, 2, 1, 3, 5, 7, 9. 1, 1, 5, 8, 8, 9, 7} Output: [ 7, 10] (the underlined portion above)",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #503. 17.19 Start with the first part: Finding the missing number if only one number is missing.",
                " #590. 17.19 Part 1: If you have to find the missing number in 0( 1) space and 0( N) time, then you can do a only constant number of passes through the array and can store only a few variables.",
                " #609. 17.19 Part 1: What if you added up all the values in the array? Could you then figure out the missing number?",
                " #626. 17.19 Part 2: We're now looking for two missing numbers, which we will call a and b. The approach from part 1 will tell us the sum of a and b, but it won't actually tell us a and b. What other calculations could we do?",
                " #649. 17.19 Part 2: There are a lot of different calculations we could try. For example, we could multiply all the numbers, but that will only lead us to the product of a and b.",
                " #672. 17.19 Part 2: Adding the numbers together will tell us the result of a + b. Multiplying the numbers together will tell us the result of a * b. How can we get the exact values for a and b?",
                " #689. 17.19 Part 2: We could do both. If we know that a + b = 87 and a * b = 962, then we can solve for a and b: a = 13 and b = 7 4. But this will also result in having to multiply really large numbers. The product of all the numbers could be larger than 10 157 \u2022 Is there a simpler calculation you can make?",
                " #696. 17.19 Part 2: Almost any \"equation\" we can come up with will work here (as long as it's not equivalent to a linear sum). It's just a matter of keeping this sum small.",
                " #702. 17.19 Part 2: Try a sum of squares of the values.",
                " #717. 17.19 Part 2: You might need the quadratic formula. It's not a big deal if you don't remember it. Most people won't. Remember that there is such a thing as good enough."
            ],
            "id": "17.19",
            "question": " Missing Two: You are given an array with all the numbers from 1 to N appearing exactly once, except for one number that is missing. How can you find the missing number in O(N) time and 0(1) space? What if there were two numbers missing?",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #519. 17.20 Recall that the median means the number for which half the numbers are larger and half the numbers are smaller.",
                " #546. 17.20 Note that you have to store all the elements you've seen. Even the smallest of the first 100 elements could become the median. You can't just toss very low or very high elements.",
                " #575. 17.20 Another way to think about this is: Can you maintain the bottom half of elements and the top half of elements?",
                " #709. 17.20 What if you used a heap? Or two heaps?"
            ],
            "id": "17.20",
            "question": " Continuous Median: Numbers are randomly generated and passed to a method. Write a program to find and maintain the median value as new values are generated.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [],
            "id": "17.21",
            "question": " Volume of Histogram: Imagine a histogram (bar graph). Design an algorithm to compute the volume of water it could hold if someone poured water across the top. You can assume that each histogram bar has width 1. EXAMPLE (Black bars are the histogram. Gray is water.) lnput:{0, 0, 4, 0, 0, 6, 0, 0, 3, 0, 5, 0, 1, 0, 0, 0} [IMG MISSING!] Output: 26 0040060030501000",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #506. 17.22 Start with a brute force, recursive solution. Just create all words that are one edit away, check if they are in the dictionary, and then attempt that path.",
                " #535. 17.22 Once you have a brute force solution, try to find a faster way of getting all valid words that are one edit away. You don't want to create all strings that are one edit away when the vast majority of them are not valid dictionary words.",
                " #556. 17.22 To quickly get the valid words that are one edit away, try to group the words in the dictionary in a useful way. Observe that all words in the form b_ll (such as bill, ball, bell, and bull) will be one edit away. However, those aren't the only words that are one edit away from bill.",
                " #580. 17.22 Create a mapping from a wildcard form (like b_ll) to all words in that form. Then, when you want to find all words that are one edit away from bill, you can look up _ill, b_ll, bi_l, and bil_ in the mapping.",
                " #598. 17.22 Your previous algorithm probably resembles a depth-first search. Can you make this faster?",
                " #618. 17.22 A breadth-first search will often be faster than a depth-first search-not necessarily in the worst case, but in many cases. Why? Can you do something even faster than this?",
                " #738. 17.22 What if you did a breadth-first search starting from both the source word and the desti\u00ad nation word?"
            ],
            "id": "17.22",
            "question": " Word Transformer: Given two words of equal length that are in a dictionary, write a method to transform one word into another word by changing only one letter at a time. The new word you get in each step must be in the dictionary. EXAMPLE Input: DAMP, LIKE Output: DAMP-> LAMP-> LIMP-> LIME-> LIKE",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #684. 17.23 Start with a brute force solution. Can you try the biggest possible square first?",
                " #695. 17.23 The biggest possible square is NxN. So if you try that square first and it works, then you know that you've found the best square. Otherwise, you can try the next smallest square.",
                " #705. 17.23 Describe the runtime of the brute force solution.",
                " #714. 17.23 Can you do preprocessing to optimize this solution?",
                " #721. 17.23 You should be able to do this in O( N 3 ) time, where N is the length of one dimension of the square.",
                " #736. 17.23 When you're checking to see if a particular square is valid (all black borders), you check how many black pixels are above (or below) a coordinate and to the left (or right) of this coordinate. Can you precompute the number of black pixels above and to the left of a given cell?"
            ],
            "id": "17.23",
            "question": " Max Black Square: Imagine you have a square matrix, where each cell (pixel) is either black or white Design an algorithm to find the maximum subsquare such that all four borders are filled with black pixels.",
            "solution": "<pre>package Q17_23_Max_Black_Square;\n\nimport CtCILibrary.AssortedMethods;\n\npublic class Question {\t\n\tpublic static Subsquare findSquareWithSize(int[][] matrix, int squareSize) {\n\t\t// On an edge of length N, there are (N - sz + 1) squares of length sz.\n\t\tint count = matrix.length - squareSize + 1; \n\t\t\n\t\t// Iterate through all squares with side length square_size.\n\t\tfor (int row = 0; row < count; row++) {\n\t\t\tfor (int col = 0; col < count; col++) {\n\t\t\t\tif (isSquare(matrix, row, col, squareSize)) {\n\t\t\t\t\treturn new Subsquare(row, col, squareSize);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic static Subsquare findSquare(int[][] matrix){\n\t\tassert(matrix.length > 0);\n\t\tfor (int row = 0; row < matrix.length; row++){\n\t\t\tassert(matrix[row].length == matrix.length);\n\t\t}\n\t\t\n\t\tint N = matrix.length;\n\t\t\n\t\tfor (int i = N; i >= 1; i--) {\n\t\t\tSubsquare square = findSquareWithSize(matrix, i);\n\t\t\tif (square != null) {\n\t\t\t\treturn square;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\t\n\n\tprivate static boolean isSquare(int[][] matrix, int row, int col, int size) {\n\t\t// Check top and bottom border.\n\t\tfor (int j = 0; j < size; j++){\n\t\t\tif (matrix[row][col+j] == 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (matrix[row+size-1][col+j] == 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Check left and right border.\n\t\tfor (int i = 1; i < size - 1; i++) {\n\t\t\tif (matrix[row+i][col] == 1){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (matrix[row+i][col+size-1] == 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[][] matrix = AssortedMethods.randomMatrix(7, 7, 0, 1);\n\t\tAssortedMethods.printMatrix(matrix);\n\t\tSubsquare square = findSquare(matrix);\n\t\tsquare.print();\n\t}\n}</pre>",
            "solutionRuntime": "0(x^3)",
            "solutionSpace": "",
            "fullSolution": "<img src=\"/assets/images/solutions/17_23.png\" />"
        },
        {
            "hints": [
                " #469. 17.24 Start with a brute force solution.",
                " #511. 17.24 The brute force solution requires us to continuously compute the sums of each matrix. Can we optimize this?",
                " #539. 17.24 What if you precomputed the sum of the submatrix starting at the top left corner and continuing to each cell? How long would it take you to compute this? If you did this, could you then get the sum of an arbitrary submatrix in O ( 1) time?",
                " #565. 17.24 If you can precompute the sum from the top left corner to each cell, you can use this to compute the sum of an arbitrary submatrix in 0( 1) time. Picture a particular submatrix. The full, precomputed sum will include this submatrix, an array immediately above it (C), and array to the left (B), and an area to the top and left (A). How can you compute the sum of just D? [IMG MISSING HERE!]",
                " #581. 17.24 The sum ofjust D will besum(A&B&C&D) - sum(A&B) - sum(A&C) + sum(A).",
                " #595. 17.24 With precomputation, you should be able to get a runtime of O ( N 4 ). Can you make this even faster?",
                " #615. 17.24 Suppose this was just a single array. How could we compute the subarray with the largest sum? See 16.17 for a solution to this.",
                " #621. 17.24 Suppose I just wanted you to find the maximum submatrix starting at row rl and ending at row r2, how could you most efficiently do this? (See the prior hint.) If I now wanted you find the maximum subarray from rl to ( r2+2), could you do this effi\u00ad ciently?"
            ],
            "id": "17.24",
            "question": " Max Submatrix: Given an NxN matrix of positive and negative integers, write code to find the submatrix with the largest possible sum.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #477. 17.25 Start by grouping the dictionary by the word lengths, since you know each column has to be the same length and each row has to be the same length.",
                " #500. 17.25 Can you find a word rectangle of a specific length and width? What if you just tried all options?",
                " #748. 17.25 Can you use a trie to terminate early when a rectangle looks invalid?"
            ],
            "id": "17.25",
            "question": " Word Rectangle: Given a list of millions of words, design an algorithm to create the largest possible rectangle of letters such that every row forms a word (reading left to right) and every column forms a word (reading top to bottom). The words need not be chosen consecutively from the list but all rows must be the same length and all columns must be the same height.",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        },
        {
            "hints": [
                " #484. 17.26 Solution 1: Start with just a simple algorithm comparing all documents to all other docu\u00ad ments. How would you compute the similarity of two documents as fast as possible?",
                " #498. 17.26 Solution 1: To compute the similarity of two documents, try reorganizing the data in some way. Sorting? Using another data structure?",
                " #510. 17.26 Solution 1: You should be able to get an O ( A+B) algorithm to compute the similarity of two documents.",
                " #518. 17.26 Solution 1: What is the relationship between the intersection and the union? Can you compute one from the other?",
                " #534. 17.26 Solution 1: To understand the relationship between the union and the intersection of two sets, consider a Venn diagram (a diagram where one circle overlaps another circle).",
                " #547. 17.26 Solution 2: It's tempting to try to think of minor optimizations-for example, keeping track of the min and max elements in each array. You could then figure out quickly, in specific cases, if two arrays don't overlap. The problem with that (and other optimiza\u00ad tions along these lines) is that you still need to compare all documents to all other docu\u00ad ments. It doesn't leverage the fact that the similarity is sparse. Given that we have a lot of documents, we really need to not compare all documents to all other documents (even if that comparison is very fast). All such solutions will be O ( D 2 ), where D is the number of documents. We shouldn't compare all documents to all other documents.",
                " #555. 17.26 Solution 2: If we can't compare all documents to all other documents, then we need to dive down and start looking at things at the element level. Consider a naive solution and see if you can extend that to multiple documents.",
                " #561. 17.26 Solution 2: One way to think about this is that we need to be able to very quickly pull a list of all documents with some similarity to a specific document. (Again, we should not do this by saying \"look at all documents and quickly eliminate the dissimilar docu\u00ad ments:'That wil I be at least O ( D 2 ) .)",
                " #569. 17.26 Solution 2: Building off the earlier hint, we can ask what defines the list of documents with some similarity to a document like {13, 16, 21, 3}. What attributes does that list have? How would we gather all documents like that?",
                " #577. 17.26 Solution 2: The list of documents similar to {13, 16, 21, 3} includes all documents with a 13, 16, 21, and 3. How can we efficiently find this list? Remember that we'll be doing this for many documents, so some precomputing can make sense.",
                " #584. 17.26 Solution 2: Try building a hash table from each word to the documents that contain this word. This will allow us to easily find all documents with some similarity to {13, 16, 21, 3}.",
                " #603. 17.26 Solution 2: Once you have a way of easily finding the documents similar to a particular document, you can go through and just compute the similarity to those documents using a simple algorithm. Can you make this faster? Specifically, can you compute the similarity directly from the hash table?",
                " #611. 17.26 Solution 2: Imagine you are looking up the documents similar to {1, 4, 6} by using a hash table that maps from a word to documents. The same document ID appears multiple times when doing this lookup. What does that indicate?",
                " #636. 17.26 Solution 3: There's an alternative solution. Consider taking all of the words from all of the documents, throwing them into one giant list, and sorting this list. Assume you could still know which document each word came from. How could you track the similar pairs?"
            ],
            "id": "17.26",
            "question": " Sparse Similarity: The similarity of two documents (each with distinct words) is defined to be the size of the intersection divided by the size of the union. For example, if the documents consist of integers, the similarity of { 1, 5, 3} and { 1, 7, 2, 3} is 0. 4, because the intersection has size 2 and the union has size 5. We have a long list of documents (with distinct values and each with an associated ID) where the similarity is believed to be \"sparse:'That is, any two arbitrarily selected documents are very likely to have similarity 0. Design an algorithm that returns a list of pairs of document IDs and the associated similarity. Print only the pairs with similarity greater than 0. Empty documents should not be printed at all. For simplicity, you may assume each document is represented as an array of distinct integers. EXAMPLE Input: 13: 16: 19: 24: Output: {14, 15, 100, 9, 3} {32, 1, 9, 3, 5} {15, 29, 2, 6, 8, 7} {7, 10} ID1, ID2 13, 19 13, 16 19, 24 SIMILARITY 0.1 0.25 0.14285714285714285",
            "solution": "",
            "solutionRuntime": "",
            "solutionSpace": "",
            "fullSolution": ""
        }
    ]
}